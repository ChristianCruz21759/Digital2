

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Wed Aug 02 13:22:54 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	maintext,global,class=CODE,split=1,delta=2
    11                           	psect	text1,local,class=CODE,merge=1,delta=2
    12                           	psect	text2,local,class=CODE,merge=1,delta=2
    13                           	psect	text3,local,class=CODE,merge=1,delta=2
    14                           	psect	text4,local,class=CODE,merge=1,delta=2
    15                           	psect	text5,local,class=CODE,merge=1,delta=2
    16                           	psect	text6,local,class=CODE,merge=1,delta=2
    17                           	psect	text7,local,class=CODE,merge=1,delta=2
    18                           	psect	text8,local,class=CODE,merge=1,delta=2
    19                           	psect	text9,local,class=CODE,merge=1,delta=2
    20                           	psect	text10,local,class=CODE,merge=1,delta=2
    21                           	psect	text11,local,class=CODE,merge=1,delta=2
    22                           	psect	text12,local,class=CODE,merge=1,delta=2
    23                           	psect	text13,local,class=CODE,merge=1,delta=2,group=1
    24                           	psect	text14,local,class=CODE,merge=1,delta=2,group=1
    25                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    26                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    27                           	dabs	1,0x7E,2
    28     0000                     
    29                           ; Version 2.40
    30                           ; Generated 17/11/2021 GMT
    31                           ; 
    32                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    33                           ; All rights reserved.
    34                           ; 
    35                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    36                           ; 
    37                           ; Redistribution and use in source and binary forms, with or without modification, are
    38                           ; permitted provided that the following conditions are met:
    39                           ; 
    40                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    41                           ;        conditions and the following disclaimer.
    42                           ; 
    43                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    44                           ;        of conditions and the following disclaimer in the documentation and/or other
    45                           ;        materials provided with the distribution. Publication is not required when
    46                           ;        this file is used in an embedded application.
    47                           ; 
    48                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    49                           ;        software without specific prior written permission.
    50                           ; 
    51                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    52                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    53                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    54                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    55                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    56                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    57                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    58                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    59                           ; 
    60                           ; 
    61                           ; Code-generator required, PIC16F887 Definitions
    62                           ; 
    63                           ; SFR Addresses
    64     0000                     	;# 
    65     0001                     	;# 
    66     0002                     	;# 
    67     0003                     	;# 
    68     0004                     	;# 
    69     0005                     	;# 
    70     0006                     	;# 
    71     0007                     	;# 
    72     0008                     	;# 
    73     0009                     	;# 
    74     000A                     	;# 
    75     000B                     	;# 
    76     000C                     	;# 
    77     000D                     	;# 
    78     000E                     	;# 
    79     000E                     	;# 
    80     000F                     	;# 
    81     0010                     	;# 
    82     0011                     	;# 
    83     0012                     	;# 
    84     0013                     	;# 
    85     0014                     	;# 
    86     0015                     	;# 
    87     0015                     	;# 
    88     0016                     	;# 
    89     0017                     	;# 
    90     0018                     	;# 
    91     0019                     	;# 
    92     001A                     	;# 
    93     001B                     	;# 
    94     001B                     	;# 
    95     001C                     	;# 
    96     001D                     	;# 
    97     001E                     	;# 
    98     001F                     	;# 
    99     0081                     	;# 
   100     0085                     	;# 
   101     0086                     	;# 
   102     0087                     	;# 
   103     0088                     	;# 
   104     0089                     	;# 
   105     008C                     	;# 
   106     008D                     	;# 
   107     008E                     	;# 
   108     008F                     	;# 
   109     0090                     	;# 
   110     0091                     	;# 
   111     0092                     	;# 
   112     0093                     	;# 
   113     0093                     	;# 
   114     0093                     	;# 
   115     0094                     	;# 
   116     0095                     	;# 
   117     0096                     	;# 
   118     0097                     	;# 
   119     0098                     	;# 
   120     0099                     	;# 
   121     009A                     	;# 
   122     009B                     	;# 
   123     009C                     	;# 
   124     009D                     	;# 
   125     009E                     	;# 
   126     009F                     	;# 
   127     0105                     	;# 
   128     0107                     	;# 
   129     0108                     	;# 
   130     0109                     	;# 
   131     010C                     	;# 
   132     010C                     	;# 
   133     010D                     	;# 
   134     010E                     	;# 
   135     010F                     	;# 
   136     0185                     	;# 
   137     0187                     	;# 
   138     0188                     	;# 
   139     0189                     	;# 
   140     018C                     	;# 
   141     018D                     	;# 
   142     0000                     	;# 
   143     0001                     	;# 
   144     0002                     	;# 
   145     0003                     	;# 
   146     0004                     	;# 
   147     0005                     	;# 
   148     0006                     	;# 
   149     0007                     	;# 
   150     0008                     	;# 
   151     0009                     	;# 
   152     000A                     	;# 
   153     000B                     	;# 
   154     000C                     	;# 
   155     000D                     	;# 
   156     000E                     	;# 
   157     000E                     	;# 
   158     000F                     	;# 
   159     0010                     	;# 
   160     0011                     	;# 
   161     0012                     	;# 
   162     0013                     	;# 
   163     0014                     	;# 
   164     0015                     	;# 
   165     0015                     	;# 
   166     0016                     	;# 
   167     0017                     	;# 
   168     0018                     	;# 
   169     0019                     	;# 
   170     001A                     	;# 
   171     001B                     	;# 
   172     001B                     	;# 
   173     001C                     	;# 
   174     001D                     	;# 
   175     001E                     	;# 
   176     001F                     	;# 
   177     0081                     	;# 
   178     0085                     	;# 
   179     0086                     	;# 
   180     0087                     	;# 
   181     0088                     	;# 
   182     0089                     	;# 
   183     008C                     	;# 
   184     008D                     	;# 
   185     008E                     	;# 
   186     008F                     	;# 
   187     0090                     	;# 
   188     0091                     	;# 
   189     0092                     	;# 
   190     0093                     	;# 
   191     0093                     	;# 
   192     0093                     	;# 
   193     0094                     	;# 
   194     0095                     	;# 
   195     0096                     	;# 
   196     0097                     	;# 
   197     0098                     	;# 
   198     0099                     	;# 
   199     009A                     	;# 
   200     009B                     	;# 
   201     009C                     	;# 
   202     009D                     	;# 
   203     009E                     	;# 
   204     009F                     	;# 
   205     0105                     	;# 
   206     0107                     	;# 
   207     0108                     	;# 
   208     0109                     	;# 
   209     010C                     	;# 
   210     010C                     	;# 
   211     010D                     	;# 
   212     010E                     	;# 
   213     010F                     	;# 
   214     0185                     	;# 
   215     0187                     	;# 
   216     0188                     	;# 
   217     0189                     	;# 
   218     018C                     	;# 
   219     018D                     	;# 
   220     0000                     	;# 
   221     0001                     	;# 
   222     0002                     	;# 
   223     0003                     	;# 
   224     0004                     	;# 
   225     0005                     	;# 
   226     0006                     	;# 
   227     0007                     	;# 
   228     0008                     	;# 
   229     0009                     	;# 
   230     000A                     	;# 
   231     000B                     	;# 
   232     000C                     	;# 
   233     000D                     	;# 
   234     000E                     	;# 
   235     000E                     	;# 
   236     000F                     	;# 
   237     0010                     	;# 
   238     0011                     	;# 
   239     0012                     	;# 
   240     0013                     	;# 
   241     0014                     	;# 
   242     0015                     	;# 
   243     0015                     	;# 
   244     0016                     	;# 
   245     0017                     	;# 
   246     0018                     	;# 
   247     0019                     	;# 
   248     001A                     	;# 
   249     001B                     	;# 
   250     001B                     	;# 
   251     001C                     	;# 
   252     001D                     	;# 
   253     001E                     	;# 
   254     001F                     	;# 
   255     0081                     	;# 
   256     0085                     	;# 
   257     0086                     	;# 
   258     0087                     	;# 
   259     0088                     	;# 
   260     0089                     	;# 
   261     008C                     	;# 
   262     008D                     	;# 
   263     008E                     	;# 
   264     008F                     	;# 
   265     0090                     	;# 
   266     0091                     	;# 
   267     0092                     	;# 
   268     0093                     	;# 
   269     0093                     	;# 
   270     0093                     	;# 
   271     0094                     	;# 
   272     0095                     	;# 
   273     0096                     	;# 
   274     0097                     	;# 
   275     0098                     	;# 
   276     0099                     	;# 
   277     009A                     	;# 
   278     009B                     	;# 
   279     009C                     	;# 
   280     009D                     	;# 
   281     009E                     	;# 
   282     009F                     	;# 
   283     0105                     	;# 
   284     0107                     	;# 
   285     0108                     	;# 
   286     0109                     	;# 
   287     010C                     	;# 
   288     010C                     	;# 
   289     010D                     	;# 
   290     010E                     	;# 
   291     010F                     	;# 
   292     0185                     	;# 
   293     0187                     	;# 
   294     0188                     	;# 
   295     0189                     	;# 
   296     018C                     	;# 
   297     018D                     	;# 
   298     0000                     	;# 
   299     0001                     	;# 
   300     0002                     	;# 
   301     0003                     	;# 
   302     0004                     	;# 
   303     0005                     	;# 
   304     0006                     	;# 
   305     0007                     	;# 
   306     0008                     	;# 
   307     0009                     	;# 
   308     000A                     	;# 
   309     000B                     	;# 
   310     000C                     	;# 
   311     000D                     	;# 
   312     000E                     	;# 
   313     000E                     	;# 
   314     000F                     	;# 
   315     0010                     	;# 
   316     0011                     	;# 
   317     0012                     	;# 
   318     0013                     	;# 
   319     0014                     	;# 
   320     0015                     	;# 
   321     0015                     	;# 
   322     0016                     	;# 
   323     0017                     	;# 
   324     0018                     	;# 
   325     0019                     	;# 
   326     001A                     	;# 
   327     001B                     	;# 
   328     001B                     	;# 
   329     001C                     	;# 
   330     001D                     	;# 
   331     001E                     	;# 
   332     001F                     	;# 
   333     0081                     	;# 
   334     0085                     	;# 
   335     0086                     	;# 
   336     0087                     	;# 
   337     0088                     	;# 
   338     0089                     	;# 
   339     008C                     	;# 
   340     008D                     	;# 
   341     008E                     	;# 
   342     008F                     	;# 
   343     0090                     	;# 
   344     0091                     	;# 
   345     0092                     	;# 
   346     0093                     	;# 
   347     0093                     	;# 
   348     0093                     	;# 
   349     0094                     	;# 
   350     0095                     	;# 
   351     0096                     	;# 
   352     0097                     	;# 
   353     0098                     	;# 
   354     0099                     	;# 
   355     009A                     	;# 
   356     009B                     	;# 
   357     009C                     	;# 
   358     009D                     	;# 
   359     009E                     	;# 
   360     009F                     	;# 
   361     0105                     	;# 
   362     0107                     	;# 
   363     0108                     	;# 
   364     0109                     	;# 
   365     010C                     	;# 
   366     010C                     	;# 
   367     010D                     	;# 
   368     010E                     	;# 
   369     010F                     	;# 
   370     0185                     	;# 
   371     0187                     	;# 
   372     0188                     	;# 
   373     0189                     	;# 
   374     018C                     	;# 
   375     018D                     	;# 
   376     0000                     	;# 
   377     0001                     	;# 
   378     0002                     	;# 
   379     0003                     	;# 
   380     0004                     	;# 
   381     0005                     	;# 
   382     0006                     	;# 
   383     0007                     	;# 
   384     0008                     	;# 
   385     0009                     	;# 
   386     000A                     	;# 
   387     000B                     	;# 
   388     000C                     	;# 
   389     000D                     	;# 
   390     000E                     	;# 
   391     000E                     	;# 
   392     000F                     	;# 
   393     0010                     	;# 
   394     0011                     	;# 
   395     0012                     	;# 
   396     0013                     	;# 
   397     0014                     	;# 
   398     0015                     	;# 
   399     0015                     	;# 
   400     0016                     	;# 
   401     0017                     	;# 
   402     0018                     	;# 
   403     0019                     	;# 
   404     001A                     	;# 
   405     001B                     	;# 
   406     001B                     	;# 
   407     001C                     	;# 
   408     001D                     	;# 
   409     001E                     	;# 
   410     001F                     	;# 
   411     0081                     	;# 
   412     0085                     	;# 
   413     0086                     	;# 
   414     0087                     	;# 
   415     0088                     	;# 
   416     0089                     	;# 
   417     008C                     	;# 
   418     008D                     	;# 
   419     008E                     	;# 
   420     008F                     	;# 
   421     0090                     	;# 
   422     0091                     	;# 
   423     0092                     	;# 
   424     0093                     	;# 
   425     0093                     	;# 
   426     0093                     	;# 
   427     0094                     	;# 
   428     0095                     	;# 
   429     0096                     	;# 
   430     0097                     	;# 
   431     0098                     	;# 
   432     0099                     	;# 
   433     009A                     	;# 
   434     009B                     	;# 
   435     009C                     	;# 
   436     009D                     	;# 
   437     009E                     	;# 
   438     009F                     	;# 
   439     0105                     	;# 
   440     0107                     	;# 
   441     0108                     	;# 
   442     0109                     	;# 
   443     010C                     	;# 
   444     010C                     	;# 
   445     010D                     	;# 
   446     010E                     	;# 
   447     010F                     	;# 
   448     0185                     	;# 
   449     0187                     	;# 
   450     0188                     	;# 
   451     0189                     	;# 
   452     018C                     	;# 
   453     018D                     	;# 
   454     0000                     	;# 
   455     0001                     	;# 
   456     0002                     	;# 
   457     0003                     	;# 
   458     0004                     	;# 
   459     0005                     	;# 
   460     0006                     	;# 
   461     0007                     	;# 
   462     0008                     	;# 
   463     0009                     	;# 
   464     000A                     	;# 
   465     000B                     	;# 
   466     000C                     	;# 
   467     000D                     	;# 
   468     000E                     	;# 
   469     000E                     	;# 
   470     000F                     	;# 
   471     0010                     	;# 
   472     0011                     	;# 
   473     0012                     	;# 
   474     0013                     	;# 
   475     0014                     	;# 
   476     0015                     	;# 
   477     0015                     	;# 
   478     0016                     	;# 
   479     0017                     	;# 
   480     0018                     	;# 
   481     0019                     	;# 
   482     001A                     	;# 
   483     001B                     	;# 
   484     001B                     	;# 
   485     001C                     	;# 
   486     001D                     	;# 
   487     001E                     	;# 
   488     001F                     	;# 
   489     0081                     	;# 
   490     0085                     	;# 
   491     0086                     	;# 
   492     0087                     	;# 
   493     0088                     	;# 
   494     0089                     	;# 
   495     008C                     	;# 
   496     008D                     	;# 
   497     008E                     	;# 
   498     008F                     	;# 
   499     0090                     	;# 
   500     0091                     	;# 
   501     0092                     	;# 
   502     0093                     	;# 
   503     0093                     	;# 
   504     0093                     	;# 
   505     0094                     	;# 
   506     0095                     	;# 
   507     0096                     	;# 
   508     0097                     	;# 
   509     0098                     	;# 
   510     0099                     	;# 
   511     009A                     	;# 
   512     009B                     	;# 
   513     009C                     	;# 
   514     009D                     	;# 
   515     009E                     	;# 
   516     009F                     	;# 
   517     0105                     	;# 
   518     0107                     	;# 
   519     0108                     	;# 
   520     0109                     	;# 
   521     010C                     	;# 
   522     010C                     	;# 
   523     010D                     	;# 
   524     010E                     	;# 
   525     010F                     	;# 
   526     0185                     	;# 
   527     0187                     	;# 
   528     0188                     	;# 
   529     0189                     	;# 
   530     018C                     	;# 
   531     018D                     	;# 
   532     0000                     	;# 
   533     0001                     	;# 
   534     0002                     	;# 
   535     0003                     	;# 
   536     0004                     	;# 
   537     0005                     	;# 
   538     0006                     	;# 
   539     0007                     	;# 
   540     0008                     	;# 
   541     0009                     	;# 
   542     000A                     	;# 
   543     000B                     	;# 
   544     000C                     	;# 
   545     000D                     	;# 
   546     000E                     	;# 
   547     000E                     	;# 
   548     000F                     	;# 
   549     0010                     	;# 
   550     0011                     	;# 
   551     0012                     	;# 
   552     0013                     	;# 
   553     0014                     	;# 
   554     0015                     	;# 
   555     0015                     	;# 
   556     0016                     	;# 
   557     0017                     	;# 
   558     0018                     	;# 
   559     0019                     	;# 
   560     001A                     	;# 
   561     001B                     	;# 
   562     001B                     	;# 
   563     001C                     	;# 
   564     001D                     	;# 
   565     001E                     	;# 
   566     001F                     	;# 
   567     0081                     	;# 
   568     0085                     	;# 
   569     0086                     	;# 
   570     0087                     	;# 
   571     0088                     	;# 
   572     0089                     	;# 
   573     008C                     	;# 
   574     008D                     	;# 
   575     008E                     	;# 
   576     008F                     	;# 
   577     0090                     	;# 
   578     0091                     	;# 
   579     0092                     	;# 
   580     0093                     	;# 
   581     0093                     	;# 
   582     0093                     	;# 
   583     0094                     	;# 
   584     0095                     	;# 
   585     0096                     	;# 
   586     0097                     	;# 
   587     0098                     	;# 
   588     0099                     	;# 
   589     009A                     	;# 
   590     009B                     	;# 
   591     009C                     	;# 
   592     009D                     	;# 
   593     009E                     	;# 
   594     009F                     	;# 
   595     0105                     	;# 
   596     0107                     	;# 
   597     0108                     	;# 
   598     0109                     	;# 
   599     010C                     	;# 
   600     010C                     	;# 
   601     010D                     	;# 
   602     010E                     	;# 
   603     010F                     	;# 
   604     0185                     	;# 
   605     0187                     	;# 
   606     0188                     	;# 
   607     0189                     	;# 
   608     018C                     	;# 
   609     018D                     	;# 
   610     0013                     _SSPBUF	set	19
   611     0014                     _SSPCON	set	20
   612     001E                     _ADRESH	set	30
   613     000B                     _INTCONbits	set	11
   614     001F                     _ADCON0bits	set	31
   615     000C                     _PIR1bits	set	12
   616     0009                     _PORTE	set	9
   617     0008                     _PORTD	set	8
   618     0007                     _PORTC	set	7
   619     0006                     _PORTB	set	6
   620     0005                     _PORTA	set	5
   621     0007                     _PORTCbits	set	7
   622     0048                     _RE0	set	72
   623     0049                     _RE1	set	73
   624     0094                     _SSPSTATbits	set	148
   625     0094                     _SSPSTAT	set	148
   626     0096                     _IOCB	set	150
   627     0095                     _WPUB	set	149
   628     0081                     _OPTION_REGbits	set	129
   629     009F                     _ADCON1bits	set	159
   630     008C                     _PIE1bits	set	140
   631     008F                     _OSCCONbits	set	143
   632     0089                     _TRISE	set	137
   633     0088                     _TRISD	set	136
   634     0087                     _TRISC	set	135
   635     0086                     _TRISB	set	134
   636     0085                     _TRISA	set	133
   637     043B                     _TRISC3	set	1083
   638     043D                     _TRISC5	set	1085
   639     043C                     _TRISC4	set	1084
   640     0189                     _ANSELH	set	393
   641     0188                     _ANSEL	set	392
   642                           
   643                           	psect	strings
   644     0003                     __pstrings:
   645     0003                     stringtab:
   646     0003                     __stringtab:
   647     0003                     stringcode:	
   648                           ;	String table - string pointers are 1 byte each
   649                           
   650     0003                     stringdir:
   651     0003  3000               	movlw	high stringdir
   652     0004  008A               	movwf	10
   653     0005  0804               	movf	4,w
   654     0006  0A84               	incf	4,f
   655     0007  0782               	addwf	2,f
   656     0008                     __stringbase:
   657     0008  3400               	retlw	0
   658     0009                     __end_of__stringtab:
   659     0009                     STR_1:
   660     0009  3450               	retlw	80	;'P'
   661     000A  346F               	retlw	111	;'o'
   662     000B  3474               	retlw	116	;'t'
   663     000C  3431               	retlw	49	;'1'
   664     000D  343A               	retlw	58	;':'
   665     000E  3420               	retlw	32	;' '
   666     000F  3450               	retlw	80	;'P'
   667     0010  346F               	retlw	111	;'o'
   668     0011  3474               	retlw	116	;'t'
   669     0012  3432               	retlw	50	;'2'
   670     0013  343A               	retlw	58	;':'
   671     0014  3420               	retlw	32	;' '
   672     0015  3443               	retlw	67	;'C'
   673     0016  3450               	retlw	80	;'P'
   674     0017  3455               	retlw	85	;'U'
   675     0018  343A               	retlw	58	;':'
   676     0019  3400               	retlw	0
   677                           
   678                           	psect	cinit
   679     07F7                     start_initialization:	
   680                           ; #config settings
   681                           
   682     07F7                     __initialization:
   683                           
   684                           ; Clear objects allocated to COMMON
   685     07F7  01FC               	clrf	__pbssCOMMON& (0+127)
   686     07F8  01FD               	clrf	(__pbssCOMMON+1)& (0+127)
   687                           
   688                           ; Clear objects allocated to BANK0
   689     07F9  1283               	bcf	3,5	;RP0=0, select bank0
   690     07FA  1303               	bcf	3,6	;RP1=0, select bank0
   691     07FB  01A7               	clrf	__pbssBANK0& (0+127)
   692     07FC                     end_of_initialization:	
   693                           ;End of C runtime variable initialization code
   694                           
   695     07FC                     __end_of__initialization:
   696     07FC  0183               	clrf	3
   697     07FD  120A  118A  2E4F   	ljmp	_main	;jump to C main() function
   698                           
   699                           	psect	bssCOMMON
   700     007C                     __pbssCOMMON:
   701     007C                     _valPot2:
   702     007C                     	ds	1
   703     007D                     _valPot1:
   704     007D                     	ds	1
   705                           
   706                           	psect	bssBANK0
   707     0027                     __pbssBANK0:
   708     0027                     _valCount:
   709     0027                     	ds	1
   710                           
   711                           	psect	cstackCOMMON
   712     0070                     __pcstackCOMMON:
   713     0070                     ?_setup:
   714     0070                     ?_spiWrite:	
   715                           ; 1 bytes @ 0x0
   716                           
   717     0070                     ??_spiWrite:	
   718                           ; 1 bytes @ 0x0
   719                           
   720     0070                     ?_spiRead:	
   721                           ; 1 bytes @ 0x0
   722                           
   723     0070                     ??_spiRead:	
   724                           ; 1 bytes @ 0x0
   725                           
   726     0070                     ?_Lcd_8bits_Write_Char:	
   727                           ; 1 bytes @ 0x0
   728                           
   729     0070                     ?_spiInit:	
   730                           ; 1 bytes @ 0x0
   731                           
   732     0070                     ?_Lcd_8bits_Init:	
   733                           ; 1 bytes @ 0x0
   734                           
   735     0070                     ?_Lcd_8bits_Clear:	
   736                           ; 1 bytes @ 0x0
   737                           
   738     0070                     ?_Lcd_8bits_Write_String:	
   739                           ; 1 bytes @ 0x0
   740                           
   741     0070                     ?_main:	
   742                           ; 1 bytes @ 0x0
   743                           
   744     0070                     ?_Lcd_8bits_Port:	
   745                           ; 1 bytes @ 0x0
   746                           
   747     0070                     ??_Lcd_8bits_Port:	
   748                           ; 1 bytes @ 0x0
   749                           
   750     0070                     ?_Lcd_8bits_Cmd:	
   751                           ; 1 bytes @ 0x0
   752                           
   753     0070                     ?_spiReceiveWait:	
   754                           ; 1 bytes @ 0x0
   755                           
   756     0070                     ??_spiReceiveWait:	
   757                           ; 1 bytes @ 0x0
   758                           
   759     0070                     ?___awmod:	
   760                           ; 1 bytes @ 0x0
   761                           
   762     0070                     Lcd_8bits_Port@a:	
   763                           ; 2 bytes @ 0x0
   764                           
   765     0070                     spiInit@sDataSample:	
   766                           ; 1 bytes @ 0x0
   767                           
   768     0070                     spiWrite@dat:	
   769                           ; 1 bytes @ 0x0
   770                           
   771     0070                     ___awmod@divisor:	
   772                           ; 1 bytes @ 0x0
   773                           
   774                           
   775                           ; 2 bytes @ 0x0
   776     0070                     	ds	1
   777     0071                     ??_Lcd_8bits_Write_Char:
   778     0071                     ??_Lcd_8bits_Cmd:	
   779                           ; 1 bytes @ 0x1
   780                           
   781     0071                     spiInit@sClockIdle:	
   782                           ; 1 bytes @ 0x1
   783                           
   784                           
   785                           ; 1 bytes @ 0x1
   786     0071                     	ds	1
   787     0072                     Lcd_8bits_Write_Char@a:
   788     0072                     spiInit@sTransmitEdge:	
   789                           ; 1 bytes @ 0x2
   790                           
   791     0072                     ___awmod@dividend:	
   792                           ; 1 bytes @ 0x2
   793                           
   794                           
   795                           ; 2 bytes @ 0x2
   796     0072                     	ds	1
   797     0073                     ??_spiInit:
   798     0073                     ??_Lcd_8bits_Write_String:	
   799                           ; 1 bytes @ 0x3
   800                           
   801     0073                     Lcd_8bits_Cmd@a:	
   802                           ; 1 bytes @ 0x3
   803                           
   804     0073                     spiInit@sType:	
   805                           ; 1 bytes @ 0x3
   806                           
   807     0073                     Lcd_8bits_Write_String@i:	
   808                           ; 1 bytes @ 0x3
   809                           
   810                           
   811                           ; 2 bytes @ 0x3
   812     0073                     	ds	1
   813     0074                     ?_Lcd_8bits_Set_Cursor:
   814     0074                     ??_Lcd_8bits_Init:	
   815                           ; 1 bytes @ 0x4
   816                           
   817     0074                     ??_Lcd_8bits_Clear:	
   818                           ; 1 bytes @ 0x4
   819                           
   820     0074                     ??___awmod:	
   821                           ; 1 bytes @ 0x4
   822                           
   823     0074                     Lcd_8bits_Set_Cursor@column:	
   824                           ; 1 bytes @ 0x4
   825                           
   826                           
   827                           ; 1 bytes @ 0x4
   828     0074                     	ds	1
   829     0075                     ??_Lcd_8bits_Set_Cursor:
   830     0075                     Lcd_8bits_Set_Cursor@row:	
   831                           ; 1 bytes @ 0x5
   832                           
   833     0075                     Lcd_8bits_Write_String@a:	
   834                           ; 1 bytes @ 0x5
   835                           
   836     0075                     ___awmod@counter:	
   837                           ; 1 bytes @ 0x5
   838                           
   839                           
   840                           ; 1 bytes @ 0x5
   841     0075                     	ds	1
   842     0076                     Lcd_8bits_Set_Cursor@temp:
   843     0076                     ___awmod@sign:	
   844                           ; 1 bytes @ 0x6
   845                           
   846                           
   847                           ; 1 bytes @ 0x6
   848     0076                     	ds	1
   849     0077                     ??_setup:
   850     0077                     ?___awdiv:	
   851                           ; 1 bytes @ 0x7
   852                           
   853     0077                     ___awdiv@divisor:	
   854                           ; 2 bytes @ 0x7
   855                           
   856                           
   857                           ; 2 bytes @ 0x7
   858     0077                     	ds	2
   859     0079                     ___awdiv@dividend:
   860                           
   861                           ; 2 bytes @ 0x9
   862     0079                     	ds	2
   863     007B                     ??___awdiv:
   864                           
   865                           ; 1 bytes @ 0xB
   866     007B                     	ds	1
   867                           
   868                           	psect	cstackBANK0
   869     0020                     __pcstackBANK0:
   870     0020                     ___awdiv@counter:
   871                           
   872                           ; 1 bytes @ 0x0
   873     0020                     	ds	1
   874     0021                     ___awdiv@sign:
   875                           
   876                           ; 1 bytes @ 0x1
   877     0021                     	ds	1
   878     0022                     ___awdiv@quotient:
   879                           
   880                           ; 2 bytes @ 0x2
   881     0022                     	ds	2
   882     0024                     ??_main:
   883                           
   884                           ; 1 bytes @ 0x4
   885     0024                     	ds	3
   886                           
   887                           	psect	maintext
   888     064F                     __pmaintext:	
   889 ;;
   890 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   891 ;;
   892 ;; *************** function _main *****************
   893 ;; Defined at:
   894 ;;		line 54 in file "mainMaster.c"
   895 ;; Parameters:    Size  Location     Type
   896 ;;		None
   897 ;; Auto vars:     Size  Location     Type
   898 ;;		None
   899 ;; Return value:  Size  Location     Type
   900 ;;                  1    wreg      void 
   901 ;; Registers used:
   902 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   903 ;; Tracked objects:
   904 ;;		On entry : B00/0
   905 ;;		On exit  : 0/0
   906 ;;		Unchanged: 0/0
   907 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   908 ;;      Params:         0       0       0       0       0
   909 ;;      Locals:         0       0       0       0       0
   910 ;;      Temps:          0       3       0       0       0
   911 ;;      Totals:         0       3       0       0       0
   912 ;;Total ram usage:        3 bytes
   913 ;; Hardware stack levels required when called: 4
   914 ;; This function calls:
   915 ;;		_Lcd_8bits_Set_Cursor
   916 ;;		_Lcd_8bits_Write_Char
   917 ;;		___awdiv
   918 ;;		___awmod
   919 ;;		_setup
   920 ;;		_spiRead
   921 ;;		_spiWrite
   922 ;; This function is called by:
   923 ;;		Startup code after reset
   924 ;; This function uses a non-reentrant model
   925 ;;
   926                           
   927     064F                     _main:	
   928                           ;psect for function _main
   929                           
   930     064F                     l1298:	
   931                           ;incstack = 0
   932                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   933                           
   934                           
   935                           ;mainMaster.c: 55:     setup();
   936     064F  120A  118A  24F3  120A  118A  	fcall	_setup
   937     0654                     l1300:
   938                           
   939                           ;mainMaster.c: 58:        _delay((unsigned long)((100)*(8000000/4000.0)));
   940     0654  3002               	movlw	2
   941     0655  1283               	bcf	3,5	;RP0=0, select bank0
   942     0656  1303               	bcf	3,6	;RP1=0, select bank0
   943     0657  00A6               	movwf	??_main+2
   944     0658  3004               	movlw	4
   945     0659  00A5               	movwf	??_main+1
   946     065A  30B9               	movlw	185
   947     065B  00A4               	movwf	??_main
   948     065C                     u527:
   949     065C  0BA4               	decfsz	??_main,f
   950     065D  2E5C               	goto	u527
   951     065E  0BA5               	decfsz	??_main+1,f
   952     065F  2E5C               	goto	u527
   953     0660  0BA6               	decfsz	??_main+2,f
   954     0661  2E5C               	goto	u527
   955     0662  2E63               	nop2
   956     0663                     l1302:
   957                           
   958                           ;mainMaster.c: 60:        PORTCbits.RC1 = 0;
   959     0663  1283               	bcf	3,5	;RP0=0, select bank0
   960     0664  1303               	bcf	3,6	;RP1=0, select bank0
   961     0665  1087               	bcf	7,1	;volatile
   962     0666                     l1304:
   963                           
   964                           ;mainMaster.c: 61:        _delay((unsigned long)((1)*(8000000/4000.0)));
   965     0666  3003               	movlw	3
   966     0667  1283               	bcf	3,5	;RP0=0, select bank0
   967     0668  1303               	bcf	3,6	;RP1=0, select bank0
   968     0669  00A5               	movwf	??_main+1
   969     066A  3097               	movlw	151
   970     066B  00A4               	movwf	??_main
   971     066C                     u537:
   972     066C  0BA4               	decfsz	??_main,f
   973     066D  2E6C               	goto	u537
   974     066E  0BA5               	decfsz	??_main+1,f
   975     066F  2E6C               	goto	u537
   976     0670                     l1306:
   977                           
   978                           ;mainMaster.c: 63:        spiWrite(0);
   979     0670  3000               	movlw	0
   980     0671  120A  118A  244B  120A  118A  	fcall	_spiWrite
   981     0676                     l1308:
   982                           
   983                           ;mainMaster.c: 64:        valPot1 = spiRead();
   984     0676  120A  118A  245F  120A  118A  	fcall	_spiRead
   985     067B  00FD               	movwf	_valPot1
   986     067C                     l1310:
   987                           
   988                           ;mainMaster.c: 66:        _delay((unsigned long)((1)*(8000000/4000.0)));
   989     067C  3003               	movlw	3
   990     067D  1283               	bcf	3,5	;RP0=0, select bank0
   991     067E  1303               	bcf	3,6	;RP1=0, select bank0
   992     067F  00A5               	movwf	??_main+1
   993     0680  3097               	movlw	151
   994     0681  00A4               	movwf	??_main
   995     0682                     u547:
   996     0682  0BA4               	decfsz	??_main,f
   997     0683  2E82               	goto	u547
   998     0684  0BA5               	decfsz	??_main+1,f
   999     0685  2E82               	goto	u547
  1000     0686                     l1312:
  1001                           
  1002                           ;mainMaster.c: 67:        PORTCbits.RC1 = 1;
  1003     0686  1283               	bcf	3,5	;RP0=0, select bank0
  1004     0687  1303               	bcf	3,6	;RP1=0, select bank0
  1005     0688  1487               	bsf	7,1	;volatile
  1006     0689                     l1314:
  1007                           
  1008                           ;mainMaster.c: 71:         PORTCbits.RC1 = 0;
  1009     0689  1087               	bcf	7,1	;volatile
  1010     068A                     l1316:
  1011                           
  1012                           ;mainMaster.c: 72:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1013     068A  3003               	movlw	3
  1014     068B  1283               	bcf	3,5	;RP0=0, select bank0
  1015     068C  1303               	bcf	3,6	;RP1=0, select bank0
  1016     068D  00A5               	movwf	??_main+1
  1017     068E  3097               	movlw	151
  1018     068F  00A4               	movwf	??_main
  1019     0690                     u557:
  1020     0690  0BA4               	decfsz	??_main,f
  1021     0691  2E90               	goto	u557
  1022     0692  0BA5               	decfsz	??_main+1,f
  1023     0693  2E90               	goto	u557
  1024     0694                     l1318:
  1025                           
  1026                           ;mainMaster.c: 74:        spiWrite(1);
  1027     0694  3001               	movlw	1
  1028     0695  120A  118A  244B  120A  118A  	fcall	_spiWrite
  1029     069A                     l1320:
  1030                           
  1031                           ;mainMaster.c: 75:        valCount = spiRead();
  1032     069A  120A  118A  245F  120A  118A  	fcall	_spiRead
  1033     069F  1283               	bcf	3,5	;RP0=0, select bank0
  1034     06A0  1303               	bcf	3,6	;RP1=0, select bank0
  1035     06A1  00A7               	movwf	_valCount
  1036     06A2                     l1322:
  1037                           
  1038                           ;mainMaster.c: 79:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1039     06A2  3003               	movlw	3
  1040     06A3  1283               	bcf	3,5	;RP0=0, select bank0
  1041     06A4  1303               	bcf	3,6	;RP1=0, select bank0
  1042     06A5  00A5               	movwf	??_main+1
  1043     06A6  3097               	movlw	151
  1044     06A7  00A4               	movwf	??_main
  1045     06A8                     u567:
  1046     06A8  0BA4               	decfsz	??_main,f
  1047     06A9  2EA8               	goto	u567
  1048     06AA  0BA5               	decfsz	??_main+1,f
  1049     06AB  2EA8               	goto	u567
  1050     06AC                     l1324:
  1051                           
  1052                           ;mainMaster.c: 80:        PORTCbits.RC1 = 1;
  1053     06AC  1283               	bcf	3,5	;RP0=0, select bank0
  1054     06AD  1303               	bcf	3,6	;RP1=0, select bank0
  1055     06AE  1487               	bsf	7,1	;volatile
  1056     06AF                     l1326:
  1057                           
  1058                           ;mainMaster.c: 84:         PORTCbits.RC2 = 0;
  1059     06AF  1107               	bcf	7,2	;volatile
  1060     06B0                     l1328:
  1061                           
  1062                           ;mainMaster.c: 85:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1063     06B0  3003               	movlw	3
  1064     06B1  1283               	bcf	3,5	;RP0=0, select bank0
  1065     06B2  1303               	bcf	3,6	;RP1=0, select bank0
  1066     06B3  00A5               	movwf	??_main+1
  1067     06B4  3097               	movlw	151
  1068     06B5  00A4               	movwf	??_main
  1069     06B6                     u577:
  1070     06B6  0BA4               	decfsz	??_main,f
  1071     06B7  2EB6               	goto	u577
  1072     06B8  0BA5               	decfsz	??_main+1,f
  1073     06B9  2EB6               	goto	u577
  1074     06BA                     l1330:
  1075                           
  1076                           ;mainMaster.c: 87:        spiWrite(0);
  1077     06BA  3000               	movlw	0
  1078     06BB  120A  118A  244B  120A  118A  	fcall	_spiWrite
  1079     06C0                     l1332:
  1080                           
  1081                           ;mainMaster.c: 88:        valPot2 = spiRead();
  1082     06C0  120A  118A  245F  120A  118A  	fcall	_spiRead
  1083     06C5  00FC               	movwf	_valPot2
  1084     06C6                     l1334:
  1085                           
  1086                           ;mainMaster.c: 90:        _delay((unsigned long)((1)*(8000000/4000.0)));
  1087     06C6  3003               	movlw	3
  1088     06C7  1283               	bcf	3,5	;RP0=0, select bank0
  1089     06C8  1303               	bcf	3,6	;RP1=0, select bank0
  1090     06C9  00A5               	movwf	??_main+1
  1091     06CA  3097               	movlw	151
  1092     06CB  00A4               	movwf	??_main
  1093     06CC                     u587:
  1094     06CC  0BA4               	decfsz	??_main,f
  1095     06CD  2ECC               	goto	u587
  1096     06CE  0BA5               	decfsz	??_main+1,f
  1097     06CF  2ECC               	goto	u587
  1098     06D0                     l1336:
  1099                           
  1100                           ;mainMaster.c: 91:        PORTCbits.RC2 = 1;
  1101     06D0  1283               	bcf	3,5	;RP0=0, select bank0
  1102     06D1  1303               	bcf	3,6	;RP1=0, select bank0
  1103     06D2  1507               	bsf	7,2	;volatile
  1104     06D3                     l1338:
  1105                           
  1106                           ;mainMaster.c: 94:        Lcd_8bits_Set_Cursor(2, 1);
  1107     06D3  01F4               	clrf	Lcd_8bits_Set_Cursor@column
  1108     06D4  0AF4               	incf	Lcd_8bits_Set_Cursor@column,f
  1109     06D5  3002               	movlw	2
  1110     06D6  120A  118A  24AE  120A  118A  	fcall	_Lcd_8bits_Set_Cursor
  1111     06DB                     l1340:
  1112                           
  1113                           ;mainMaster.c: 95:        Lcd_8bits_Write_Char((valPot1/100 + 48));
  1114     06DB  3064               	movlw	100
  1115     06DC  00F7               	movwf	___awdiv@divisor
  1116     06DD  3000               	movlw	0
  1117     06DE  00F8               	movwf	___awdiv@divisor+1
  1118     06DF  087D               	movf	_valPot1,w
  1119     06E0  1283               	bcf	3,5	;RP0=0, select bank0
  1120     06E1  1303               	bcf	3,6	;RP1=0, select bank0
  1121     06E2  00A4               	movwf	??_main
  1122     06E3  01A5               	clrf	??_main+1
  1123     06E4  0824               	movf	??_main,w
  1124     06E5  00F9               	movwf	___awdiv@dividend
  1125     06E6  0825               	movf	??_main+1,w
  1126     06E7  00FA               	movwf	___awdiv@dividend+1
  1127     06E8  120A  118A  25E6  120A  118A  	fcall	___awdiv
  1128     06ED  0877               	movf	?___awdiv,w
  1129     06EE  3E30               	addlw	48
  1130     06EF  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1131     06F4                     l1342:
  1132                           
  1133                           ;mainMaster.c: 96:        Lcd_8bits_Write_Char((valPot1 % 100)/10 + 48);
  1134     06F4  300A               	movlw	10
  1135     06F5  00F7               	movwf	___awdiv@divisor
  1136     06F6  3000               	movlw	0
  1137     06F7  00F8               	movwf	___awdiv@divisor+1
  1138     06F8  087D               	movf	_valPot1,w
  1139     06F9  1283               	bcf	3,5	;RP0=0, select bank0
  1140     06FA  1303               	bcf	3,6	;RP1=0, select bank0
  1141     06FB  00A4               	movwf	??_main
  1142     06FC  01A5               	clrf	??_main+1
  1143     06FD  0824               	movf	??_main,w
  1144     06FE  00F2               	movwf	___awmod@dividend
  1145     06FF  0825               	movf	??_main+1,w
  1146     0700  00F3               	movwf	___awmod@dividend+1
  1147     0701  3064               	movlw	100
  1148     0702  00F0               	movwf	___awmod@divisor
  1149     0703  3000               	movlw	0
  1150     0704  00F1               	movwf	___awmod@divisor+1
  1151     0705  120A  118A  258D  120A  118A  	fcall	___awmod
  1152     070A  0871               	movf	?___awmod+1,w
  1153     070B  00FA               	movwf	___awdiv@dividend+1
  1154     070C  0870               	movf	?___awmod,w
  1155     070D  00F9               	movwf	___awdiv@dividend
  1156     070E  120A  118A  25E6  120A  118A  	fcall	___awdiv
  1157     0713  0877               	movf	?___awdiv,w
  1158     0714  3E30               	addlw	48
  1159     0715  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1160     071A                     l1344:
  1161                           
  1162                           ;mainMaster.c: 97:        Lcd_8bits_Write_Char(valPot1 % 10 + 48);
  1163     071A  300A               	movlw	10
  1164     071B  00F0               	movwf	___awmod@divisor
  1165     071C  3000               	movlw	0
  1166     071D  00F1               	movwf	___awmod@divisor+1
  1167     071E  087D               	movf	_valPot1,w
  1168     071F  1283               	bcf	3,5	;RP0=0, select bank0
  1169     0720  1303               	bcf	3,6	;RP1=0, select bank0
  1170     0721  00A4               	movwf	??_main
  1171     0722  01A5               	clrf	??_main+1
  1172     0723  0824               	movf	??_main,w
  1173     0724  00F2               	movwf	___awmod@dividend
  1174     0725  0825               	movf	??_main+1,w
  1175     0726  00F3               	movwf	___awmod@dividend+1
  1176     0727  120A  118A  258D  120A  118A  	fcall	___awmod
  1177     072C  0870               	movf	?___awmod,w
  1178     072D  3E30               	addlw	48
  1179     072E  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1180     0733                     l1346:
  1181                           
  1182                           ;mainMaster.c: 99:        Lcd_8bits_Set_Cursor(2, 7);
  1183     0733  3007               	movlw	7
  1184     0734  00F4               	movwf	Lcd_8bits_Set_Cursor@column
  1185     0735  3002               	movlw	2
  1186     0736  120A  118A  24AE  120A  118A  	fcall	_Lcd_8bits_Set_Cursor
  1187     073B                     l1348:
  1188                           
  1189                           ;mainMaster.c: 100:        Lcd_8bits_Write_Char((valPot2/100 + 48));
  1190     073B  3064               	movlw	100
  1191     073C  00F7               	movwf	___awdiv@divisor
  1192     073D  3000               	movlw	0
  1193     073E  00F8               	movwf	___awdiv@divisor+1
  1194     073F  087C               	movf	_valPot2,w
  1195     0740  1283               	bcf	3,5	;RP0=0, select bank0
  1196     0741  1303               	bcf	3,6	;RP1=0, select bank0
  1197     0742  00A4               	movwf	??_main
  1198     0743  01A5               	clrf	??_main+1
  1199     0744  0824               	movf	??_main,w
  1200     0745  00F9               	movwf	___awdiv@dividend
  1201     0746  0825               	movf	??_main+1,w
  1202     0747  00FA               	movwf	___awdiv@dividend+1
  1203     0748  120A  118A  25E6  120A  118A  	fcall	___awdiv
  1204     074D  0877               	movf	?___awdiv,w
  1205     074E  3E30               	addlw	48
  1206     074F  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1207     0754                     l1350:
  1208                           
  1209                           ;mainMaster.c: 101:        Lcd_8bits_Write_Char((valPot2 % 100)/10 + 48);
  1210     0754  300A               	movlw	10
  1211     0755  00F7               	movwf	___awdiv@divisor
  1212     0756  3000               	movlw	0
  1213     0757  00F8               	movwf	___awdiv@divisor+1
  1214     0758  087C               	movf	_valPot2,w
  1215     0759  1283               	bcf	3,5	;RP0=0, select bank0
  1216     075A  1303               	bcf	3,6	;RP1=0, select bank0
  1217     075B  00A4               	movwf	??_main
  1218     075C  01A5               	clrf	??_main+1
  1219     075D  0824               	movf	??_main,w
  1220     075E  00F2               	movwf	___awmod@dividend
  1221     075F  0825               	movf	??_main+1,w
  1222     0760  00F3               	movwf	___awmod@dividend+1
  1223     0761  3064               	movlw	100
  1224     0762  00F0               	movwf	___awmod@divisor
  1225     0763  3000               	movlw	0
  1226     0764  00F1               	movwf	___awmod@divisor+1
  1227     0765  120A  118A  258D  120A  118A  	fcall	___awmod
  1228     076A  0871               	movf	?___awmod+1,w
  1229     076B  00FA               	movwf	___awdiv@dividend+1
  1230     076C  0870               	movf	?___awmod,w
  1231     076D  00F9               	movwf	___awdiv@dividend
  1232     076E  120A  118A  25E6  120A  118A  	fcall	___awdiv
  1233     0773  0877               	movf	?___awdiv,w
  1234     0774  3E30               	addlw	48
  1235     0775  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1236     077A                     l1352:
  1237                           
  1238                           ;mainMaster.c: 102:        Lcd_8bits_Write_Char(valPot2 % 10 + 48);
  1239     077A  300A               	movlw	10
  1240     077B  00F0               	movwf	___awmod@divisor
  1241     077C  3000               	movlw	0
  1242     077D  00F1               	movwf	___awmod@divisor+1
  1243     077E  087C               	movf	_valPot2,w
  1244     077F  1283               	bcf	3,5	;RP0=0, select bank0
  1245     0780  1303               	bcf	3,6	;RP1=0, select bank0
  1246     0781  00A4               	movwf	??_main
  1247     0782  01A5               	clrf	??_main+1
  1248     0783  0824               	movf	??_main,w
  1249     0784  00F2               	movwf	___awmod@dividend
  1250     0785  0825               	movf	??_main+1,w
  1251     0786  00F3               	movwf	___awmod@dividend+1
  1252     0787  120A  118A  258D  120A  118A  	fcall	___awmod
  1253     078C  0870               	movf	?___awmod,w
  1254     078D  3E30               	addlw	48
  1255     078E  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1256     0793                     l1354:
  1257                           
  1258                           ;mainMaster.c: 104:        Lcd_8bits_Set_Cursor(2, 13);
  1259     0793  300D               	movlw	13
  1260     0794  00F4               	movwf	Lcd_8bits_Set_Cursor@column
  1261     0795  3002               	movlw	2
  1262     0796  120A  118A  24AE  120A  118A  	fcall	_Lcd_8bits_Set_Cursor
  1263     079B                     l1356:
  1264                           
  1265                           ;mainMaster.c: 105:        Lcd_8bits_Write_Char(valCount/100 + 48);
  1266     079B  3064               	movlw	100
  1267     079C  00F7               	movwf	___awdiv@divisor
  1268     079D  3000               	movlw	0
  1269     079E  00F8               	movwf	___awdiv@divisor+1
  1270     079F  1283               	bcf	3,5	;RP0=0, select bank0
  1271     07A0  1303               	bcf	3,6	;RP1=0, select bank0
  1272     07A1  0827               	movf	_valCount,w
  1273     07A2  00A4               	movwf	??_main
  1274     07A3  01A5               	clrf	??_main+1
  1275     07A4  0824               	movf	??_main,w
  1276     07A5  00F9               	movwf	___awdiv@dividend
  1277     07A6  0825               	movf	??_main+1,w
  1278     07A7  00FA               	movwf	___awdiv@dividend+1
  1279     07A8  120A  118A  25E6  120A  118A  	fcall	___awdiv
  1280     07AD  0877               	movf	?___awdiv,w
  1281     07AE  3E30               	addlw	48
  1282     07AF  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1283     07B4                     l1358:
  1284                           
  1285                           ;mainMaster.c: 106:        Lcd_8bits_Write_Char(valCount%100/10 + 48);
  1286     07B4  300A               	movlw	10
  1287     07B5  00F7               	movwf	___awdiv@divisor
  1288     07B6  3000               	movlw	0
  1289     07B7  00F8               	movwf	___awdiv@divisor+1
  1290     07B8  1283               	bcf	3,5	;RP0=0, select bank0
  1291     07B9  1303               	bcf	3,6	;RP1=0, select bank0
  1292     07BA  0827               	movf	_valCount,w
  1293     07BB  00A4               	movwf	??_main
  1294     07BC  01A5               	clrf	??_main+1
  1295     07BD  0824               	movf	??_main,w
  1296     07BE  00F2               	movwf	___awmod@dividend
  1297     07BF  0825               	movf	??_main+1,w
  1298     07C0  00F3               	movwf	___awmod@dividend+1
  1299     07C1  3064               	movlw	100
  1300     07C2  00F0               	movwf	___awmod@divisor
  1301     07C3  3000               	movlw	0
  1302     07C4  00F1               	movwf	___awmod@divisor+1
  1303     07C5  120A  118A  258D  120A  118A  	fcall	___awmod
  1304     07CA  0871               	movf	?___awmod+1,w
  1305     07CB  00FA               	movwf	___awdiv@dividend+1
  1306     07CC  0870               	movf	?___awmod,w
  1307     07CD  00F9               	movwf	___awdiv@dividend
  1308     07CE  120A  118A  25E6  120A  118A  	fcall	___awdiv
  1309     07D3  0877               	movf	?___awdiv,w
  1310     07D4  3E30               	addlw	48
  1311     07D5  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1312     07DA                     l1360:
  1313                           
  1314                           ;mainMaster.c: 107:        Lcd_8bits_Write_Char(valCount%10 + 48);
  1315     07DA  300A               	movlw	10
  1316     07DB  00F0               	movwf	___awmod@divisor
  1317     07DC  3000               	movlw	0
  1318     07DD  00F1               	movwf	___awmod@divisor+1
  1319     07DE  1283               	bcf	3,5	;RP0=0, select bank0
  1320     07DF  1303               	bcf	3,6	;RP1=0, select bank0
  1321     07E0  0827               	movf	_valCount,w
  1322     07E1  00A4               	movwf	??_main
  1323     07E2  01A5               	clrf	??_main+1
  1324     07E3  0824               	movf	??_main,w
  1325     07E4  00F2               	movwf	___awmod@dividend
  1326     07E5  0825               	movf	??_main+1,w
  1327     07E6  00F3               	movwf	___awmod@dividend+1
  1328     07E7  120A  118A  258D  120A  118A  	fcall	___awmod
  1329     07EC  0870               	movf	?___awmod,w
  1330     07ED  3E30               	addlw	48
  1331     07EE  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1332     07F3  2E54               	goto	l1300
  1333     07F4  120A  118A  2800   	ljmp	start
  1334     07F7                     __end_of_main:
  1335                           
  1336                           	psect	text1
  1337     044B                     __ptext1:	
  1338 ;; *************** function _spiWrite *****************
  1339 ;; Defined at:
  1340 ;;		line 36 in file "SPI.c"
  1341 ;; Parameters:    Size  Location     Type
  1342 ;;  dat             1    wreg     unsigned char 
  1343 ;; Auto vars:     Size  Location     Type
  1344 ;;  dat             1    0[COMMON] unsigned char 
  1345 ;; Return value:  Size  Location     Type
  1346 ;;                  1    wreg      void 
  1347 ;; Registers used:
  1348 ;;		wreg
  1349 ;; Tracked objects:
  1350 ;;		On entry : 0/0
  1351 ;;		On exit  : 0/0
  1352 ;;		Unchanged: 0/0
  1353 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1354 ;;      Params:         0       0       0       0       0
  1355 ;;      Locals:         1       0       0       0       0
  1356 ;;      Temps:          0       0       0       0       0
  1357 ;;      Totals:         1       0       0       0       0
  1358 ;;Total ram usage:        1 bytes
  1359 ;; Hardware stack levels used: 1
  1360 ;; This function calls:
  1361 ;;		Nothing
  1362 ;; This function is called by:
  1363 ;;		_main
  1364 ;; This function uses a non-reentrant model
  1365 ;;
  1366                           
  1367     044B                     _spiWrite:	
  1368                           ;psect for function _spiWrite
  1369                           
  1370                           
  1371                           ;incstack = 0
  1372                           ; Regs used in _spiWrite: [wreg]
  1373                           ;spiWrite@dat stored from wreg
  1374     044B  00F0               	movwf	spiWrite@dat
  1375     044C                     l1208:
  1376                           
  1377                           ;SPI.c: 36: void spiWrite(char dat);SPI.c: 37: {;SPI.c: 38:     SSPBUF = dat;
  1378     044C  0870               	movf	spiWrite@dat,w
  1379     044D  1283               	bcf	3,5	;RP0=0, select bank0
  1380     044E  1303               	bcf	3,6	;RP1=0, select bank0
  1381     044F  0093               	movwf	19	;volatile
  1382     0450                     l201:
  1383     0450  0008               	return
  1384     0451                     __end_of_spiWrite:
  1385                           
  1386                           	psect	text2
  1387     045F                     __ptext2:	
  1388 ;; *************** function _spiRead *****************
  1389 ;; Defined at:
  1390 ;;		line 49 in file "SPI.c"
  1391 ;; Parameters:    Size  Location     Type
  1392 ;;		None
  1393 ;; Auto vars:     Size  Location     Type
  1394 ;;		None
  1395 ;; Return value:  Size  Location     Type
  1396 ;;                  1    wreg      unsigned char 
  1397 ;; Registers used:
  1398 ;;		wreg, status,2, status,0, pclath, cstack
  1399 ;; Tracked objects:
  1400 ;;		On entry : 0/0
  1401 ;;		On exit  : 0/0
  1402 ;;		Unchanged: 0/0
  1403 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1404 ;;      Params:         0       0       0       0       0
  1405 ;;      Locals:         0       0       0       0       0
  1406 ;;      Temps:          0       0       0       0       0
  1407 ;;      Totals:         0       0       0       0       0
  1408 ;;Total ram usage:        0 bytes
  1409 ;; Hardware stack levels used: 1
  1410 ;; Hardware stack levels required when called: 1
  1411 ;; This function calls:
  1412 ;;		_spiReceiveWait
  1413 ;; This function is called by:
  1414 ;;		_main
  1415 ;; This function uses a non-reentrant model
  1416 ;;
  1417                           
  1418     045F                     _spiRead:	
  1419                           ;psect for function _spiRead
  1420                           
  1421     045F                     l1210:	
  1422                           ;incstack = 0
  1423                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1424                           
  1425                           
  1426                           ;SPI.c: 51:     spiReceiveWait();
  1427     045F  120A  118A  2458  120A  118A  	fcall	_spiReceiveWait
  1428     0464                     l1212:
  1429                           
  1430                           ;SPI.c: 52:     return(SSPBUF);
  1431     0464  1283               	bcf	3,5	;RP0=0, select bank0
  1432     0465  1303               	bcf	3,6	;RP1=0, select bank0
  1433     0466  0813               	movf	19,w	;volatile
  1434     0467                     l209:
  1435     0467  0008               	return
  1436     0468                     __end_of_spiRead:
  1437                           
  1438                           	psect	text3
  1439     0458                     __ptext3:	
  1440 ;; *************** function _spiReceiveWait *****************
  1441 ;; Defined at:
  1442 ;;		line 31 in file "SPI.c"
  1443 ;; Parameters:    Size  Location     Type
  1444 ;;		None
  1445 ;; Auto vars:     Size  Location     Type
  1446 ;;		None
  1447 ;; Return value:  Size  Location     Type
  1448 ;;                  1    wreg      void 
  1449 ;; Registers used:
  1450 ;;		None
  1451 ;; Tracked objects:
  1452 ;;		On entry : 0/0
  1453 ;;		On exit  : 0/0
  1454 ;;		Unchanged: 0/0
  1455 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1456 ;;      Params:         0       0       0       0       0
  1457 ;;      Locals:         0       0       0       0       0
  1458 ;;      Temps:          0       0       0       0       0
  1459 ;;      Totals:         0       0       0       0       0
  1460 ;;Total ram usage:        0 bytes
  1461 ;; Hardware stack levels used: 1
  1462 ;; This function calls:
  1463 ;;		Nothing
  1464 ;; This function is called by:
  1465 ;;		_spiRead
  1466 ;; This function uses a non-reentrant model
  1467 ;;
  1468                           
  1469     0458                     _spiReceiveWait:	
  1470                           ;psect for function _spiReceiveWait
  1471                           
  1472     0458                     l1184:	
  1473                           ;incstack = 0
  1474                           ; Regs used in _spiReceiveWait: []
  1475                           
  1476     0458                     l195:	
  1477                           ;SPI.c: 33:     while ( !SSPSTATbits.BF );
  1478                           
  1479     0458  1683               	bsf	3,5	;RP0=1, select bank1
  1480     0459  1303               	bcf	3,6	;RP1=0, select bank1
  1481     045A  1C14               	btfss	20,0	;volatile
  1482     045B  2C5D               	goto	u321
  1483     045C  2C5E               	goto	u320
  1484     045D                     u321:
  1485     045D  2C58               	goto	l195
  1486     045E                     u320:
  1487     045E                     l198:
  1488     045E  0008               	return
  1489     045F                     __end_of_spiReceiveWait:
  1490                           
  1491                           	psect	text4
  1492     04F3                     __ptext4:	
  1493 ;; *************** function _setup *****************
  1494 ;; Defined at:
  1495 ;;		line 115 in file "mainMaster.c"
  1496 ;; Parameters:    Size  Location     Type
  1497 ;;		None
  1498 ;; Auto vars:     Size  Location     Type
  1499 ;;		None
  1500 ;; Return value:  Size  Location     Type
  1501 ;;                  1    wreg      void 
  1502 ;; Registers used:
  1503 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1504 ;; Tracked objects:
  1505 ;;		On entry : 0/0
  1506 ;;		On exit  : 0/0
  1507 ;;		Unchanged: 0/0
  1508 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1509 ;;      Params:         0       0       0       0       0
  1510 ;;      Locals:         0       0       0       0       0
  1511 ;;      Temps:          0       0       0       0       0
  1512 ;;      Totals:         0       0       0       0       0
  1513 ;;Total ram usage:        0 bytes
  1514 ;; Hardware stack levels used: 1
  1515 ;; Hardware stack levels required when called: 3
  1516 ;; This function calls:
  1517 ;;		_Lcd_8bits_Clear
  1518 ;;		_Lcd_8bits_Init
  1519 ;;		_Lcd_8bits_Set_Cursor
  1520 ;;		_Lcd_8bits_Write_String
  1521 ;;		_spiInit
  1522 ;; This function is called by:
  1523 ;;		_main
  1524 ;; This function uses a non-reentrant model
  1525 ;;
  1526                           
  1527     04F3                     _setup:	
  1528                           ;psect for function _setup
  1529                           
  1530     04F3                     l1186:	
  1531                           ;incstack = 0
  1532                           ; Regs used in _setup: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1533                           
  1534                           
  1535                           ;mainMaster.c: 119:     ANSEL = 0;
  1536     04F3  1683               	bsf	3,5	;RP0=1, select bank3
  1537     04F4  1703               	bsf	3,6	;RP1=1, select bank3
  1538     04F5  0188               	clrf	8	;volatile
  1539                           
  1540                           ;mainMaster.c: 120:     ANSELH = 0;
  1541     04F6  0189               	clrf	9	;volatile
  1542                           
  1543                           ;mainMaster.c: 122:     TRISA = 0;
  1544     04F7  1683               	bsf	3,5	;RP0=1, select bank1
  1545     04F8  1303               	bcf	3,6	;RP1=0, select bank1
  1546     04F9  0185               	clrf	5	;volatile
  1547                           
  1548                           ;mainMaster.c: 123:     PORTA = 0;
  1549     04FA  1283               	bcf	3,5	;RP0=0, select bank0
  1550     04FB  1303               	bcf	3,6	;RP1=0, select bank0
  1551     04FC  0185               	clrf	5	;volatile
  1552                           
  1553                           ;mainMaster.c: 125:     TRISB = 0;
  1554     04FD  1683               	bsf	3,5	;RP0=1, select bank1
  1555     04FE  1303               	bcf	3,6	;RP1=0, select bank1
  1556     04FF  0186               	clrf	6	;volatile
  1557                           
  1558                           ;mainMaster.c: 126:     PORTB = 0;
  1559     0500  1283               	bcf	3,5	;RP0=0, select bank0
  1560     0501  1303               	bcf	3,6	;RP1=0, select bank0
  1561     0502  0186               	clrf	6	;volatile
  1562                           
  1563                           ;mainMaster.c: 128:     TRISC = 0;
  1564     0503  1683               	bsf	3,5	;RP0=1, select bank1
  1565     0504  1303               	bcf	3,6	;RP1=0, select bank1
  1566     0505  0187               	clrf	7	;volatile
  1567     0506                     l1188:
  1568                           
  1569                           ;mainMaster.c: 129:     TRISC4 = 1;
  1570     0506  1607               	bsf	7,4	;volatile
  1571                           
  1572                           ;mainMaster.c: 130:     PORTC = 0;
  1573     0507  1283               	bcf	3,5	;RP0=0, select bank0
  1574     0508  1303               	bcf	3,6	;RP1=0, select bank0
  1575     0509  0187               	clrf	7	;volatile
  1576                           
  1577                           ;mainMaster.c: 132:     TRISD = 0;
  1578     050A  1683               	bsf	3,5	;RP0=1, select bank1
  1579     050B  1303               	bcf	3,6	;RP1=0, select bank1
  1580     050C  0188               	clrf	8	;volatile
  1581                           
  1582                           ;mainMaster.c: 133:     PORTD = 0;
  1583     050D  1283               	bcf	3,5	;RP0=0, select bank0
  1584     050E  1303               	bcf	3,6	;RP1=0, select bank0
  1585     050F  0188               	clrf	8	;volatile
  1586                           
  1587                           ;mainMaster.c: 135:     TRISE = 0;
  1588     0510  1683               	bsf	3,5	;RP0=1, select bank1
  1589     0511  1303               	bcf	3,6	;RP1=0, select bank1
  1590     0512  0189               	clrf	9	;volatile
  1591                           
  1592                           ;mainMaster.c: 136:     PORTE = 0;
  1593     0513  1283               	bcf	3,5	;RP0=0, select bank0
  1594     0514  1303               	bcf	3,6	;RP1=0, select bank0
  1595     0515  0189               	clrf	9	;volatile
  1596     0516                     l1190:
  1597                           
  1598                           ;mainMaster.c: 138:     PORTCbits.RC1 = 1;
  1599     0516  1487               	bsf	7,1	;volatile
  1600     0517                     l1192:
  1601                           
  1602                           ;mainMaster.c: 139:     PORTCbits.RC2 = 1;
  1603     0517  1507               	bsf	7,2	;volatile
  1604     0518                     l1194:
  1605                           
  1606                           ;mainMaster.c: 140:     spiInit(SPI_MASTER_OSC_DIV4, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_I
      +                          DLE_LOW, SPI_IDLE_2_ACTIVE);
  1607     0518  01F0               	clrf	spiInit@sDataSample
  1608     0519  01F1               	clrf	spiInit@sClockIdle
  1609     051A  01F2               	clrf	spiInit@sTransmitEdge
  1610     051B  3020               	movlw	32
  1611     051C  120A  118A  247E  120A  118A  	fcall	_spiInit
  1612     0521                     l1196:
  1613                           
  1614                           ;mainMaster.c: 142:     OSCCONbits.IRCF = 0b111;
  1615     0521  3070               	movlw	112
  1616     0522  1683               	bsf	3,5	;RP0=1, select bank1
  1617     0523  1303               	bcf	3,6	;RP1=0, select bank1
  1618     0524  048F               	iorwf	15,f	;volatile
  1619     0525                     l1198:
  1620                           
  1621                           ;mainMaster.c: 143:     OSCCONbits.SCS = 1;
  1622     0525  140F               	bsf	15,0	;volatile
  1623     0526                     l1200:
  1624                           
  1625                           ;mainMaster.c: 145:     Lcd_8bits_Init();
  1626     0526  120A  118A  253F  120A  118A  	fcall	_Lcd_8bits_Init
  1627     052B                     l1202:
  1628                           
  1629                           ;mainMaster.c: 147:     Lcd_8bits_Clear();
  1630     052B  120A  118A  2451  120A  118A  	fcall	_Lcd_8bits_Clear
  1631     0530                     l1204:
  1632                           
  1633                           ;mainMaster.c: 148:     Lcd_8bits_Set_Cursor(1, 1);
  1634     0530  01F4               	clrf	Lcd_8bits_Set_Cursor@column
  1635     0531  0AF4               	incf	Lcd_8bits_Set_Cursor@column,f
  1636     0532  3001               	movlw	1
  1637     0533  120A  118A  24AE  120A  118A  	fcall	_Lcd_8bits_Set_Cursor
  1638     0538                     l1206:
  1639                           
  1640                           ;mainMaster.c: 149:     Lcd_8bits_Write_String("Pot1: Pot2: CPU:");
  1641     0538  3001               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
  1642     0539  120A  118A  24CE  120A  118A  	fcall	_Lcd_8bits_Write_String
  1643     053E                     l67:
  1644     053E  0008               	return
  1645     053F                     __end_of_setup:
  1646                           
  1647                           	psect	text5
  1648     047E                     __ptext5:	
  1649 ;; *************** function _spiInit *****************
  1650 ;; Defined at:
  1651 ;;		line 14 in file "SPI.c"
  1652 ;; Parameters:    Size  Location     Type
  1653 ;;  sType           1    wreg     enum E1292
  1654 ;;  sDataSample     1    0[COMMON] enum E1300
  1655 ;;  sClockIdle      1    1[COMMON] enum E1304
  1656 ;;  sTransmitEdg    1    2[COMMON] enum E1308
  1657 ;; Auto vars:     Size  Location     Type
  1658 ;;  sType           1    3[COMMON] enum E1292
  1659 ;; Return value:  Size  Location     Type
  1660 ;;                  1    wreg      void 
  1661 ;; Registers used:
  1662 ;;		wreg, status,2, status,0
  1663 ;; Tracked objects:
  1664 ;;		On entry : 0/0
  1665 ;;		On exit  : 0/0
  1666 ;;		Unchanged: 0/0
  1667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1668 ;;      Params:         3       0       0       0       0
  1669 ;;      Locals:         1       0       0       0       0
  1670 ;;      Temps:          0       0       0       0       0
  1671 ;;      Totals:         4       0       0       0       0
  1672 ;;Total ram usage:        4 bytes
  1673 ;; Hardware stack levels used: 1
  1674 ;; This function calls:
  1675 ;;		Nothing
  1676 ;; This function is called by:
  1677 ;;		_setup
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681     047E                     _spiInit:	
  1682                           ;psect for function _spiInit
  1683                           
  1684                           
  1685                           ;incstack = 0
  1686                           ; Regs used in _spiInit: [wreg+status,2+status,0]
  1687                           ;spiInit@sType stored from wreg
  1688     047E  00F3               	movwf	spiInit@sType
  1689     047F                     l1148:
  1690                           
  1691                           ;SPI.c: 14: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 15: {;SPI.c: 16:     TRISC5 = 0;
  1692     047F  1683               	bsf	3,5	;RP0=1, select bank1
  1693     0480  1303               	bcf	3,6	;RP1=0, select bank1
  1694     0481  1287               	bcf	7,5	;volatile
  1695                           
  1696                           ;SPI.c: 17:     if(sType & 0b00000100)
  1697     0482  1D73               	btfss	spiInit@sType,2
  1698     0483  2C85               	goto	u301
  1699     0484  2C86               	goto	u300
  1700     0485                     u301:
  1701     0485  2C8A               	goto	l1154
  1702     0486                     u300:
  1703     0486                     l1150:
  1704                           
  1705                           ;SPI.c: 18:     {;SPI.c: 19:         SSPSTAT = sTransmitEdge;
  1706     0486  0872               	movf	spiInit@sTransmitEdge,w
  1707     0487  0094               	movwf	20	;volatile
  1708     0488                     l1152:
  1709                           
  1710                           ;SPI.c: 20:         TRISC3 = 1;
  1711     0488  1587               	bsf	7,3	;volatile
  1712                           
  1713                           ;SPI.c: 21:     }
  1714     0489  2C8E               	goto	l191
  1715     048A                     l1154:
  1716                           
  1717                           ;SPI.c: 23:     {;SPI.c: 24:         SSPSTAT = sDataSample | sTransmitEdge;
  1718     048A  0870               	movf	spiInit@sDataSample,w
  1719     048B  0472               	iorwf	spiInit@sTransmitEdge,w
  1720     048C  0094               	movwf	20	;volatile
  1721     048D                     l1156:
  1722                           
  1723                           ;SPI.c: 25:         TRISC3 = 0;
  1724     048D  1187               	bcf	7,3	;volatile
  1725     048E                     l191:	
  1726                           ;SPI.c: 26:     }
  1727                           
  1728                           
  1729                           ;SPI.c: 28:     SSPCON = sType | sClockIdle;
  1730     048E  0873               	movf	spiInit@sType,w
  1731     048F  0471               	iorwf	spiInit@sClockIdle,w
  1732     0490  1283               	bcf	3,5	;RP0=0, select bank0
  1733     0491  1303               	bcf	3,6	;RP1=0, select bank0
  1734     0492  0094               	movwf	20	;volatile
  1735     0493                     l192:
  1736     0493  0008               	return
  1737     0494                     __end_of_spiInit:
  1738                           
  1739                           	psect	text6
  1740     04CE                     __ptext6:	
  1741 ;; *************** function _Lcd_8bits_Write_String *****************
  1742 ;; Defined at:
  1743 ;;		line 78 in file "lcd_8bits_lib.c"
  1744 ;; Parameters:    Size  Location     Type
  1745 ;;  a               1    wreg     PTR unsigned char 
  1746 ;;		 -> STR_1(17), 
  1747 ;; Auto vars:     Size  Location     Type
  1748 ;;  a               1    5[COMMON] PTR unsigned char 
  1749 ;;		 -> STR_1(17), 
  1750 ;;  i               2    3[COMMON] int 
  1751 ;; Return value:  Size  Location     Type
  1752 ;;                  1    wreg      void 
  1753 ;; Registers used:
  1754 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  1755 ;; Tracked objects:
  1756 ;;		On entry : 0/0
  1757 ;;		On exit  : 0/0
  1758 ;;		Unchanged: 0/0
  1759 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1760 ;;      Params:         0       0       0       0       0
  1761 ;;      Locals:         3       0       0       0       0
  1762 ;;      Temps:          0       0       0       0       0
  1763 ;;      Totals:         3       0       0       0       0
  1764 ;;Total ram usage:        3 bytes
  1765 ;; Hardware stack levels used: 1
  1766 ;; Hardware stack levels required when called: 2
  1767 ;; This function calls:
  1768 ;;		_Lcd_8bits_Write_Char
  1769 ;; This function is called by:
  1770 ;;		_setup
  1771 ;; This function uses a non-reentrant model
  1772 ;;
  1773                           
  1774     04CE                     _Lcd_8bits_Write_String:	
  1775                           ;psect for function _Lcd_8bits_Write_String
  1776                           
  1777                           
  1778                           ;incstack = 0
  1779                           ; Regs used in _Lcd_8bits_Write_String: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  1780                           ;Lcd_8bits_Write_String@a stored from wreg
  1781     04CE  00F5               	movwf	Lcd_8bits_Write_String@a
  1782     04CF                     l1176:
  1783                           
  1784                           ;lcd_8bits_lib.c: 78: void Lcd_8bits_Write_String(char *a);lcd_8bits_lib.c: 79: {;lcd_8b
      +                          its_lib.c: 80:  int i;;lcd_8bits_lib.c: 81:  for(i=0;a[i]!='\0';i++)
  1785     04CF  01F3               	clrf	Lcd_8bits_Write_String@i
  1786     04D0  01F4               	clrf	Lcd_8bits_Write_String@i+1
  1787     04D1  2CE5               	goto	l1182
  1788     04D2                     l1178:
  1789                           
  1790                           ;lcd_8bits_lib.c: 82:     Lcd_8bits_Write_Char(a[i]);
  1791     04D2  0873               	movf	Lcd_8bits_Write_String@i,w
  1792     04D3  0775               	addwf	Lcd_8bits_Write_String@a,w
  1793     04D4  0084               	movwf	4
  1794     04D5  120A  118A  2003  120A  118A  	fcall	stringdir
  1795     04DA  120A  118A  2468  120A  118A  	fcall	_Lcd_8bits_Write_Char
  1796     04DF                     l1180:
  1797     04DF  3001               	movlw	1
  1798     04E0  07F3               	addwf	Lcd_8bits_Write_String@i,f
  1799     04E1  1803               	skipnc
  1800     04E2  0AF4               	incf	Lcd_8bits_Write_String@i+1,f
  1801     04E3  3000               	movlw	0
  1802     04E4  07F4               	addwf	Lcd_8bits_Write_String@i+1,f
  1803     04E5                     l1182:
  1804     04E5  0873               	movf	Lcd_8bits_Write_String@i,w
  1805     04E6  0775               	addwf	Lcd_8bits_Write_String@a,w
  1806     04E7  0084               	movwf	4
  1807     04E8  120A  118A  2003  120A  118A  	fcall	stringdir
  1808     04ED  3A00               	xorlw	0
  1809     04EE  1D03               	skipz
  1810     04EF  2CF1               	goto	u311
  1811     04F0  2CF2               	goto	u310
  1812     04F1                     u311:
  1813     04F1  2CD2               	goto	l1178
  1814     04F2                     u310:
  1815     04F2                     l169:
  1816     04F2  0008               	return
  1817     04F3                     __end_of_Lcd_8bits_Write_String:
  1818                           
  1819                           	psect	text7
  1820     0468                     __ptext7:	
  1821 ;; *************** function _Lcd_8bits_Write_Char *****************
  1822 ;; Defined at:
  1823 ;;		line 67 in file "lcd_8bits_lib.c"
  1824 ;; Parameters:    Size  Location     Type
  1825 ;;  a               1    wreg     unsigned char 
  1826 ;; Auto vars:     Size  Location     Type
  1827 ;;  a               1    2[COMMON] unsigned char 
  1828 ;; Return value:  Size  Location     Type
  1829 ;;                  1    wreg      void 
  1830 ;; Registers used:
  1831 ;;		wreg, status,2, status,0, pclath, cstack
  1832 ;; Tracked objects:
  1833 ;;		On entry : 0/0
  1834 ;;		On exit  : 0/0
  1835 ;;		Unchanged: 0/0
  1836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1837 ;;      Params:         0       0       0       0       0
  1838 ;;      Locals:         1       0       0       0       0
  1839 ;;      Temps:          1       0       0       0       0
  1840 ;;      Totals:         2       0       0       0       0
  1841 ;;Total ram usage:        2 bytes
  1842 ;; Hardware stack levels used: 1
  1843 ;; Hardware stack levels required when called: 1
  1844 ;; This function calls:
  1845 ;;		_Lcd_8bits_Port
  1846 ;; This function is called by:
  1847 ;;		_main
  1848 ;;		_Lcd_8bits_Write_String
  1849 ;; This function uses a non-reentrant model
  1850 ;;
  1851                           
  1852     0468                     _Lcd_8bits_Write_Char:	
  1853                           ;psect for function _Lcd_8bits_Write_Char
  1854                           
  1855                           
  1856                           ;incstack = 0
  1857                           ; Regs used in _Lcd_8bits_Write_Char: [wreg+status,2+status,0+pclath+cstack]
  1858                           ;Lcd_8bits_Write_Char@a stored from wreg
  1859     0468  00F2               	movwf	Lcd_8bits_Write_Char@a
  1860     0469                     l1116:
  1861                           
  1862                           ;lcd_8bits_lib.c: 67: void Lcd_8bits_Write_Char(char a);lcd_8bits_lib.c: 68: {;lcd_8bits
      +                          _lib.c: 70:    RE1 = 1;
  1863     0469  1283               	bcf	3,5	;RP0=0, select bank0
  1864     046A  1303               	bcf	3,6	;RP1=0, select bank0
  1865     046B  1489               	bsf	9,1	;volatile
  1866     046C                     l1118:
  1867                           
  1868                           ;lcd_8bits_lib.c: 71:    Lcd_8bits_Port(a);
  1869     046C  0872               	movf	Lcd_8bits_Write_Char@a,w
  1870     046D  120A  118A  2445  120A  118A  	fcall	_Lcd_8bits_Port
  1871     0472                     l1120:
  1872                           
  1873                           ;lcd_8bits_lib.c: 72:    RE0 = 1;
  1874     0472  1283               	bcf	3,5	;RP0=0, select bank0
  1875     0473  1303               	bcf	3,6	;RP1=0, select bank0
  1876     0474  1409               	bsf	9,0	;volatile
  1877     0475                     l1122:
  1878                           
  1879                           ;lcd_8bits_lib.c: 73:    _delay((unsigned long)((40)*(8000000/4000000.0)));
  1880     0475  301A               	movlw	26
  1881     0476  00F1               	movwf	??_Lcd_8bits_Write_Char
  1882     0477                     u597:
  1883     0477  0BF1               	decfsz	??_Lcd_8bits_Write_Char,f
  1884     0478  2C77               	goto	u597
  1885     0479  0000               	nop
  1886     047A                     l1124:
  1887                           
  1888                           ;lcd_8bits_lib.c: 74:    RE0 = 0;
  1889     047A  1283               	bcf	3,5	;RP0=0, select bank0
  1890     047B  1303               	bcf	3,6	;RP1=0, select bank0
  1891     047C  1009               	bcf	9,0	;volatile
  1892     047D                     l163:
  1893     047D  0008               	return
  1894     047E                     __end_of_Lcd_8bits_Write_Char:
  1895                           
  1896                           	psect	text8
  1897     04AE                     __ptext8:	
  1898 ;; *************** function _Lcd_8bits_Set_Cursor *****************
  1899 ;; Defined at:
  1900 ;;		line 30 in file "lcd_8bits_lib.c"
  1901 ;; Parameters:    Size  Location     Type
  1902 ;;  row             1    wreg     unsigned char 
  1903 ;;  column          1    4[COMMON] unsigned char 
  1904 ;; Auto vars:     Size  Location     Type
  1905 ;;  row             1    5[COMMON] unsigned char 
  1906 ;;  temp            1    6[COMMON] unsigned char 
  1907 ;; Return value:  Size  Location     Type
  1908 ;;                  1    wreg      void 
  1909 ;; Registers used:
  1910 ;;		wreg, status,2, status,0, pclath, cstack
  1911 ;; Tracked objects:
  1912 ;;		On entry : 0/0
  1913 ;;		On exit  : 0/0
  1914 ;;		Unchanged: 0/0
  1915 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1916 ;;      Params:         1       0       0       0       0
  1917 ;;      Locals:         2       0       0       0       0
  1918 ;;      Temps:          0       0       0       0       0
  1919 ;;      Totals:         3       0       0       0       0
  1920 ;;Total ram usage:        3 bytes
  1921 ;; Hardware stack levels used: 1
  1922 ;; Hardware stack levels required when called: 2
  1923 ;; This function calls:
  1924 ;;		_Lcd_8bits_Cmd
  1925 ;; This function is called by:
  1926 ;;		_main
  1927 ;;		_setup
  1928 ;; This function uses a non-reentrant model
  1929 ;;
  1930                           
  1931     04AE                     _Lcd_8bits_Set_Cursor:	
  1932                           ;psect for function _Lcd_8bits_Set_Cursor
  1933                           
  1934                           
  1935                           ;incstack = 0
  1936                           ; Regs used in _Lcd_8bits_Set_Cursor: [wreg+status,2+status,0+pclath+cstack]
  1937                           ;Lcd_8bits_Set_Cursor@row stored from wreg
  1938     04AE  00F5               	movwf	Lcd_8bits_Set_Cursor@row
  1939     04AF                     l1136:
  1940                           
  1941                           ;lcd_8bits_lib.c: 30: void Lcd_8bits_Set_Cursor(char row, char column);lcd_8bits_lib.c: 
      +                          31: {;lcd_8bits_lib.c: 32:  char temp;;lcd_8bits_lib.c: 33:  if(row == 1)
  1942     04AF  0375               	decf	Lcd_8bits_Set_Cursor@row,w
  1943     04B0  1D03               	btfss	3,2
  1944     04B1  2CB3               	goto	u281
  1945     04B2  2CB4               	goto	u280
  1946     04B3                     u281:
  1947     04B3  2CBE               	goto	l1142
  1948     04B4                     u280:
  1949     04B4                     l1138:
  1950                           
  1951                           ;lcd_8bits_lib.c: 34:  {;lcd_8bits_lib.c: 35:    temp = 0x80 + column - 1;
  1952     04B4  0874               	movf	Lcd_8bits_Set_Cursor@column,w
  1953     04B5  3E7F               	addlw	127
  1954     04B6  00F6               	movwf	Lcd_8bits_Set_Cursor@temp
  1955     04B7                     l1140:
  1956                           
  1957                           ;lcd_8bits_lib.c: 36:   Lcd_8bits_Cmd(temp);
  1958     04B7  0876               	movf	Lcd_8bits_Set_Cursor@temp,w
  1959     04B8  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  1960                           
  1961                           ;lcd_8bits_lib.c: 38:  }
  1962     04BD  2CCD               	goto	l157
  1963     04BE                     l1142:
  1964     04BE  3002               	movlw	2
  1965     04BF  0675               	xorwf	Lcd_8bits_Set_Cursor@row,w
  1966     04C0  1D03               	btfss	3,2
  1967     04C1  2CC3               	goto	u291
  1968     04C2  2CC4               	goto	u290
  1969     04C3                     u291:
  1970     04C3  2CCD               	goto	l157
  1971     04C4                     u290:
  1972     04C4                     l1144:
  1973                           
  1974                           ;lcd_8bits_lib.c: 40:  {;lcd_8bits_lib.c: 41:   temp = 0xC0 + column - 1;
  1975     04C4  0874               	movf	Lcd_8bits_Set_Cursor@column,w
  1976     04C5  3EBF               	addlw	191
  1977     04C6  00F6               	movwf	Lcd_8bits_Set_Cursor@temp
  1978     04C7                     l1146:
  1979                           
  1980                           ;lcd_8bits_lib.c: 42:   Lcd_8bits_Cmd(temp);
  1981     04C7  0876               	movf	Lcd_8bits_Set_Cursor@temp,w
  1982     04C8  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  1983     04CD                     l157:
  1984     04CD  0008               	return
  1985     04CE                     __end_of_Lcd_8bits_Set_Cursor:
  1986                           
  1987                           	psect	text9
  1988     053F                     __ptext9:	
  1989 ;; *************** function _Lcd_8bits_Init *****************
  1990 ;; Defined at:
  1991 ;;		line 46 in file "lcd_8bits_lib.c"
  1992 ;; Parameters:    Size  Location     Type
  1993 ;;		None
  1994 ;; Auto vars:     Size  Location     Type
  1995 ;;		None
  1996 ;; Return value:  Size  Location     Type
  1997 ;;                  1    wreg      void 
  1998 ;; Registers used:
  1999 ;;		wreg, status,2, status,0, pclath, cstack
  2000 ;; Tracked objects:
  2001 ;;		On entry : 0/0
  2002 ;;		On exit  : 0/0
  2003 ;;		Unchanged: 0/0
  2004 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2005 ;;      Params:         0       0       0       0       0
  2006 ;;      Locals:         0       0       0       0       0
  2007 ;;      Temps:          2       0       0       0       0
  2008 ;;      Totals:         2       0       0       0       0
  2009 ;;Total ram usage:        2 bytes
  2010 ;; Hardware stack levels used: 1
  2011 ;; Hardware stack levels required when called: 2
  2012 ;; This function calls:
  2013 ;;		_Lcd_8bits_Cmd
  2014 ;;		_Lcd_8bits_Port
  2015 ;; This function is called by:
  2016 ;;		_setup
  2017 ;; This function uses a non-reentrant model
  2018 ;;
  2019                           
  2020     053F                     _Lcd_8bits_Init:	
  2021                           ;psect for function _Lcd_8bits_Init
  2022                           
  2023     053F                     l1158:	
  2024                           ;incstack = 0
  2025                           ; Regs used in _Lcd_8bits_Init: [wreg+status,2+status,0+pclath+cstack]
  2026                           
  2027                           
  2028                           ;lcd_8bits_lib.c: 49:     Lcd_8bits_Port(0x00);
  2029     053F  3000               	movlw	0
  2030     0540  120A  118A  2445  120A  118A  	fcall	_Lcd_8bits_Port
  2031     0545                     l1160:
  2032                           
  2033                           ;lcd_8bits_lib.c: 50:      _delay((unsigned long)((20)*(8000000/4000.0)));
  2034     0545  3034               	movlw	52
  2035     0546  00F5               	movwf	??_Lcd_8bits_Init+1
  2036     0547  30F1               	movlw	241
  2037     0548  00F4               	movwf	??_Lcd_8bits_Init
  2038     0549                     u607:
  2039     0549  0BF4               	decfsz	??_Lcd_8bits_Init,f
  2040     054A  2D49               	goto	u607
  2041     054B  0BF5               	decfsz	??_Lcd_8bits_Init+1,f
  2042     054C  2D49               	goto	u607
  2043     054D  2D4E               	nop2
  2044     054E                     l1162:
  2045                           
  2046                           ;lcd_8bits_lib.c: 51:     Lcd_8bits_Cmd(0x38);
  2047     054E  3038               	movlw	56
  2048     054F  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2049                           
  2050                           ;lcd_8bits_lib.c: 52:       _delay((unsigned long)((5)*(8000000/4000.0)));
  2051     0554  300D               	movlw	13
  2052     0555  00F5               	movwf	??_Lcd_8bits_Init+1
  2053     0556  30FB               	movlw	251
  2054     0557  00F4               	movwf	??_Lcd_8bits_Init
  2055     0558                     u617:
  2056     0558  0BF4               	decfsz	??_Lcd_8bits_Init,f
  2057     0559  2D58               	goto	u617
  2058     055A  0BF5               	decfsz	??_Lcd_8bits_Init+1,f
  2059     055B  2D58               	goto	u617
  2060     055C  2D5D               	nop2
  2061     055D                     l1164:
  2062                           
  2063                           ;lcd_8bits_lib.c: 53:     Lcd_8bits_Cmd(0x38);
  2064     055D  3038               	movlw	56
  2065     055E  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2066     0563                     l1166:
  2067                           
  2068                           ;lcd_8bits_lib.c: 54:     _delay((unsigned long)((11)*(8000000/4000.0)));
  2069     0563  301D               	movlw	29
  2070     0564  00F5               	movwf	??_Lcd_8bits_Init+1
  2071     0565  3091               	movlw	145
  2072     0566  00F4               	movwf	??_Lcd_8bits_Init
  2073     0567                     u627:
  2074     0567  0BF4               	decfsz	??_Lcd_8bits_Init,f
  2075     0568  2D67               	goto	u627
  2076     0569  0BF5               	decfsz	??_Lcd_8bits_Init+1,f
  2077     056A  2D67               	goto	u627
  2078                           
  2079                           ;lcd_8bits_lib.c: 55:     Lcd_8bits_Cmd(0x38);
  2080     056B  3038               	movlw	56
  2081     056C  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2082                           
  2083                           ;lcd_8bits_lib.c: 59:     Lcd_8bits_Cmd(0x0C);
  2084     0571  300C               	movlw	12
  2085     0572  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2086     0577                     l1168:
  2087                           
  2088                           ;lcd_8bits_lib.c: 60:     _delay((unsigned long)((5)*(8000000/4000.0)));
  2089     0577  300D               	movlw	13
  2090     0578  00F5               	movwf	??_Lcd_8bits_Init+1
  2091     0579  30FB               	movlw	251
  2092     057A  00F4               	movwf	??_Lcd_8bits_Init
  2093     057B                     u637:
  2094     057B  0BF4               	decfsz	??_Lcd_8bits_Init,f
  2095     057C  2D7B               	goto	u637
  2096     057D  0BF5               	decfsz	??_Lcd_8bits_Init+1,f
  2097     057E  2D7B               	goto	u637
  2098     057F  2D80               	nop2
  2099     0580                     l1170:
  2100                           
  2101                           ;lcd_8bits_lib.c: 61:     Lcd_8bits_Cmd(0x01);
  2102     0580  3001               	movlw	1
  2103     0581  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2104     0586                     l1172:
  2105                           
  2106                           ;lcd_8bits_lib.c: 63:     Lcd_8bits_Cmd(0x06);
  2107     0586  3006               	movlw	6
  2108     0587  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2109     058C                     l160:
  2110     058C  0008               	return
  2111     058D                     __end_of_Lcd_8bits_Init:
  2112                           
  2113                           	psect	text10
  2114     0451                     __ptext10:	
  2115 ;; *************** function _Lcd_8bits_Clear *****************
  2116 ;; Defined at:
  2117 ;;		line 25 in file "lcd_8bits_lib.c"
  2118 ;; Parameters:    Size  Location     Type
  2119 ;;		None
  2120 ;; Auto vars:     Size  Location     Type
  2121 ;;		None
  2122 ;; Return value:  Size  Location     Type
  2123 ;;                  1    wreg      void 
  2124 ;; Registers used:
  2125 ;;		wreg, status,2, status,0, pclath, cstack
  2126 ;; Tracked objects:
  2127 ;;		On entry : 0/0
  2128 ;;		On exit  : 0/0
  2129 ;;		Unchanged: 0/0
  2130 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2131 ;;      Params:         0       0       0       0       0
  2132 ;;      Locals:         0       0       0       0       0
  2133 ;;      Temps:          0       0       0       0       0
  2134 ;;      Totals:         0       0       0       0       0
  2135 ;;Total ram usage:        0 bytes
  2136 ;; Hardware stack levels used: 1
  2137 ;; Hardware stack levels required when called: 2
  2138 ;; This function calls:
  2139 ;;		_Lcd_8bits_Cmd
  2140 ;; This function is called by:
  2141 ;;		_setup
  2142 ;; This function uses a non-reentrant model
  2143 ;;
  2144                           
  2145     0451                     _Lcd_8bits_Clear:	
  2146                           ;psect for function _Lcd_8bits_Clear
  2147                           
  2148     0451                     l1174:	
  2149                           ;incstack = 0
  2150                           ; Regs used in _Lcd_8bits_Clear: [wreg+status,2+status,0+pclath+cstack]
  2151                           
  2152                           
  2153                           ;lcd_8bits_lib.c: 27:  Lcd_8bits_Cmd(0x01);
  2154     0451  3001               	movlw	1
  2155     0452  120A  118A  2494  120A  118A  	fcall	_Lcd_8bits_Cmd
  2156     0457                     l151:
  2157     0457  0008               	return
  2158     0458                     __end_of_Lcd_8bits_Clear:
  2159                           
  2160                           	psect	text11
  2161     0494                     __ptext11:	
  2162 ;; *************** function _Lcd_8bits_Cmd *****************
  2163 ;; Defined at:
  2164 ;;		line 16 in file "lcd_8bits_lib.c"
  2165 ;; Parameters:    Size  Location     Type
  2166 ;;  a               1    wreg     unsigned char 
  2167 ;; Auto vars:     Size  Location     Type
  2168 ;;  a               1    3[COMMON] unsigned char 
  2169 ;; Return value:  Size  Location     Type
  2170 ;;                  1    wreg      void 
  2171 ;; Registers used:
  2172 ;;		wreg, status,2, status,0, pclath, cstack
  2173 ;; Tracked objects:
  2174 ;;		On entry : 0/0
  2175 ;;		On exit  : 0/0
  2176 ;;		Unchanged: 0/0
  2177 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2178 ;;      Params:         0       0       0       0       0
  2179 ;;      Locals:         1       0       0       0       0
  2180 ;;      Temps:          2       0       0       0       0
  2181 ;;      Totals:         3       0       0       0       0
  2182 ;;Total ram usage:        3 bytes
  2183 ;; Hardware stack levels used: 1
  2184 ;; Hardware stack levels required when called: 1
  2185 ;; This function calls:
  2186 ;;		_Lcd_8bits_Port
  2187 ;; This function is called by:
  2188 ;;		_Lcd_8bits_Clear
  2189 ;;		_Lcd_8bits_Set_Cursor
  2190 ;;		_Lcd_8bits_Init
  2191 ;;		_Lcd_8bits_Shift_Right
  2192 ;;		_Lcd_8bits_Shift_Left
  2193 ;; This function uses a non-reentrant model
  2194 ;;
  2195                           
  2196     0494                     _Lcd_8bits_Cmd:	
  2197                           ;psect for function _Lcd_8bits_Cmd
  2198                           
  2199                           
  2200                           ;incstack = 0
  2201                           ; Regs used in _Lcd_8bits_Cmd: [wreg+status,2+status,0+pclath+cstack]
  2202                           ;Lcd_8bits_Cmd@a stored from wreg
  2203     0494  00F3               	movwf	Lcd_8bits_Cmd@a
  2204     0495                     l1126:
  2205                           
  2206                           ;lcd_8bits_lib.c: 16: void Lcd_8bits_Cmd(char a);lcd_8bits_lib.c: 17: {;lcd_8bits_lib.c:
      +                           18:  RE1 = 0;
  2207     0495  1283               	bcf	3,5	;RP0=0, select bank0
  2208     0496  1303               	bcf	3,6	;RP1=0, select bank0
  2209     0497  1089               	bcf	9,1	;volatile
  2210     0498                     l1128:
  2211                           
  2212                           ;lcd_8bits_lib.c: 19:  Lcd_8bits_Port(a);
  2213     0498  0873               	movf	Lcd_8bits_Cmd@a,w
  2214     0499  120A  118A  2445  120A  118A  	fcall	_Lcd_8bits_Port
  2215     049E                     l1130:
  2216                           
  2217                           ;lcd_8bits_lib.c: 20:  RE0 = 1;
  2218     049E  1283               	bcf	3,5	;RP0=0, select bank0
  2219     049F  1303               	bcf	3,6	;RP1=0, select bank0
  2220     04A0  1409               	bsf	9,0	;volatile
  2221     04A1                     l1132:
  2222                           
  2223                           ;lcd_8bits_lib.c: 21:     _delay((unsigned long)((4)*(8000000/4000.0)));
  2224     04A1  300B               	movlw	11
  2225     04A2  00F2               	movwf	??_Lcd_8bits_Cmd+1
  2226     04A3  3062               	movlw	98
  2227     04A4  00F1               	movwf	??_Lcd_8bits_Cmd
  2228     04A5                     u647:
  2229     04A5  0BF1               	decfsz	??_Lcd_8bits_Cmd,f
  2230     04A6  2CA5               	goto	u647
  2231     04A7  0BF2               	decfsz	??_Lcd_8bits_Cmd+1,f
  2232     04A8  2CA5               	goto	u647
  2233     04A9  0000               	nop
  2234     04AA                     l1134:
  2235                           
  2236                           ;lcd_8bits_lib.c: 22:     RE0 = 0;
  2237     04AA  1283               	bcf	3,5	;RP0=0, select bank0
  2238     04AB  1303               	bcf	3,6	;RP1=0, select bank0
  2239     04AC  1009               	bcf	9,0	;volatile
  2240     04AD                     l148:
  2241     04AD  0008               	return
  2242     04AE                     __end_of_Lcd_8bits_Cmd:
  2243                           
  2244                           	psect	text12
  2245     0445                     __ptext12:	
  2246 ;; *************** function _Lcd_8bits_Port *****************
  2247 ;; Defined at:
  2248 ;;		line 11 in file "lcd_8bits_lib.c"
  2249 ;; Parameters:    Size  Location     Type
  2250 ;;  a               1    wreg     unsigned char 
  2251 ;; Auto vars:     Size  Location     Type
  2252 ;;  a               1    0[COMMON] unsigned char 
  2253 ;; Return value:  Size  Location     Type
  2254 ;;                  1    wreg      void 
  2255 ;; Registers used:
  2256 ;;		wreg
  2257 ;; Tracked objects:
  2258 ;;		On entry : 0/0
  2259 ;;		On exit  : 0/0
  2260 ;;		Unchanged: 0/0
  2261 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2262 ;;      Params:         0       0       0       0       0
  2263 ;;      Locals:         1       0       0       0       0
  2264 ;;      Temps:          0       0       0       0       0
  2265 ;;      Totals:         1       0       0       0       0
  2266 ;;Total ram usage:        1 bytes
  2267 ;; Hardware stack levels used: 1
  2268 ;; This function calls:
  2269 ;;		Nothing
  2270 ;; This function is called by:
  2271 ;;		_Lcd_8bits_Cmd
  2272 ;;		_Lcd_8bits_Init
  2273 ;;		_Lcd_8bits_Write_Char
  2274 ;; This function uses a non-reentrant model
  2275 ;;
  2276                           
  2277     0445                     _Lcd_8bits_Port:	
  2278                           ;psect for function _Lcd_8bits_Port
  2279                           
  2280                           
  2281                           ;incstack = 0
  2282                           ; Regs used in _Lcd_8bits_Port: [wreg]
  2283                           ;Lcd_8bits_Port@a stored from wreg
  2284     0445  00F0               	movwf	Lcd_8bits_Port@a
  2285     0446                     l1114:
  2286                           
  2287                           ;lcd_8bits_lib.c: 13:     PORTD = a;
  2288     0446  0870               	movf	Lcd_8bits_Port@a,w
  2289     0447  1283               	bcf	3,5	;RP0=0, select bank0
  2290     0448  1303               	bcf	3,6	;RP1=0, select bank0
  2291     0449  0088               	movwf	8	;volatile
  2292     044A                     l145:
  2293     044A  0008               	return
  2294     044B                     __end_of_Lcd_8bits_Port:
  2295                           
  2296                           	psect	text13
  2297     058D                     __ptext13:	
  2298 ;; *************** function ___awmod *****************
  2299 ;; Defined at:
  2300 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awmod.c"
  2301 ;; Parameters:    Size  Location     Type
  2302 ;;  divisor         2    0[COMMON] int 
  2303 ;;  dividend        2    2[COMMON] int 
  2304 ;; Auto vars:     Size  Location     Type
  2305 ;;  sign            1    6[COMMON] unsigned char 
  2306 ;;  counter         1    5[COMMON] unsigned char 
  2307 ;; Return value:  Size  Location     Type
  2308 ;;                  2    0[COMMON] int 
  2309 ;; Registers used:
  2310 ;;		wreg, status,2, status,0
  2311 ;; Tracked objects:
  2312 ;;		On entry : 0/0
  2313 ;;		On exit  : 0/0
  2314 ;;		Unchanged: 0/0
  2315 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2316 ;;      Params:         4       0       0       0       0
  2317 ;;      Locals:         2       0       0       0       0
  2318 ;;      Temps:          1       0       0       0       0
  2319 ;;      Totals:         7       0       0       0       0
  2320 ;;Total ram usage:        7 bytes
  2321 ;; Hardware stack levels used: 1
  2322 ;; This function calls:
  2323 ;;		Nothing
  2324 ;; This function is called by:
  2325 ;;		_main
  2326 ;; This function uses a non-reentrant model
  2327 ;;
  2328                           
  2329     058D                     ___awmod:	
  2330                           ;psect for function ___awmod
  2331                           
  2332     058D                     l1260:	
  2333                           ;incstack = 0
  2334                           ; Regs used in ___awmod: [wreg+status,2+status,0]
  2335                           
  2336     058D  01F6               	clrf	___awmod@sign
  2337     058E                     l1262:
  2338     058E  1FF3               	btfss	___awmod@dividend+1,7
  2339     058F  2D91               	goto	u431
  2340     0590  2D92               	goto	u430
  2341     0591                     u431:
  2342     0591  2D99               	goto	l1268
  2343     0592                     u430:
  2344     0592                     l1264:
  2345     0592  09F2               	comf	___awmod@dividend,f
  2346     0593  09F3               	comf	___awmod@dividend+1,f
  2347     0594  0AF2               	incf	___awmod@dividend,f
  2348     0595  1903               	skipnz
  2349     0596  0AF3               	incf	___awmod@dividend+1,f
  2350     0597                     l1266:
  2351     0597  01F6               	clrf	___awmod@sign
  2352     0598  0AF6               	incf	___awmod@sign,f
  2353     0599                     l1268:
  2354     0599  1FF1               	btfss	___awmod@divisor+1,7
  2355     059A  2D9C               	goto	u441
  2356     059B  2D9D               	goto	u440
  2357     059C                     u441:
  2358     059C  2DA2               	goto	l1272
  2359     059D                     u440:
  2360     059D                     l1270:
  2361     059D  09F0               	comf	___awmod@divisor,f
  2362     059E  09F1               	comf	___awmod@divisor+1,f
  2363     059F  0AF0               	incf	___awmod@divisor,f
  2364     05A0  1903               	skipnz
  2365     05A1  0AF1               	incf	___awmod@divisor+1,f
  2366     05A2                     l1272:
  2367     05A2  0870               	movf	___awmod@divisor,w
  2368     05A3  0471               	iorwf	___awmod@divisor+1,w
  2369     05A4  1903               	btfsc	3,2
  2370     05A5  2DA7               	goto	u451
  2371     05A6  2DA8               	goto	u450
  2372     05A7                     u451:
  2373     05A7  2DD7               	goto	l1290
  2374     05A8                     u450:
  2375     05A8                     l1274:
  2376     05A8  01F5               	clrf	___awmod@counter
  2377     05A9  0AF5               	incf	___awmod@counter,f
  2378     05AA  2DB6               	goto	l1280
  2379     05AB                     l1276:
  2380     05AB  3001               	movlw	1
  2381     05AC                     u465:
  2382     05AC  1003               	clrc
  2383     05AD  0DF0               	rlf	___awmod@divisor,f
  2384     05AE  0DF1               	rlf	___awmod@divisor+1,f
  2385     05AF  3EFF               	addlw	-1
  2386     05B0  1D03               	skipz
  2387     05B1  2DAC               	goto	u465
  2388     05B2                     l1278:
  2389     05B2  3001               	movlw	1
  2390     05B3  00F4               	movwf	??___awmod
  2391     05B4  0874               	movf	??___awmod,w
  2392     05B5  07F5               	addwf	___awmod@counter,f
  2393     05B6                     l1280:
  2394     05B6  1FF1               	btfss	___awmod@divisor+1,7
  2395     05B7  2DB9               	goto	u471
  2396     05B8  2DBA               	goto	u470
  2397     05B9                     u471:
  2398     05B9  2DAB               	goto	l1276
  2399     05BA                     u470:
  2400     05BA                     l1282:
  2401     05BA  0871               	movf	___awmod@divisor+1,w
  2402     05BB  0273               	subwf	___awmod@dividend+1,w
  2403     05BC  1D03               	skipz
  2404     05BD  2DC0               	goto	u485
  2405     05BE  0870               	movf	___awmod@divisor,w
  2406     05BF  0272               	subwf	___awmod@dividend,w
  2407     05C0                     u485:
  2408     05C0  1C03               	skipc
  2409     05C1  2DC3               	goto	u481
  2410     05C2  2DC4               	goto	u480
  2411     05C3                     u481:
  2412     05C3  2DCA               	goto	l1286
  2413     05C4                     u480:
  2414     05C4                     l1284:
  2415     05C4  0870               	movf	___awmod@divisor,w
  2416     05C5  02F2               	subwf	___awmod@dividend,f
  2417     05C6  0871               	movf	___awmod@divisor+1,w
  2418     05C7  1C03               	skipc
  2419     05C8  03F3               	decf	___awmod@dividend+1,f
  2420     05C9  02F3               	subwf	___awmod@dividend+1,f
  2421     05CA                     l1286:
  2422     05CA  3001               	movlw	1
  2423     05CB                     u495:
  2424     05CB  1003               	clrc
  2425     05CC  0CF1               	rrf	___awmod@divisor+1,f
  2426     05CD  0CF0               	rrf	___awmod@divisor,f
  2427     05CE  3EFF               	addlw	-1
  2428     05CF  1D03               	skipz
  2429     05D0  2DCB               	goto	u495
  2430     05D1                     l1288:
  2431     05D1  3001               	movlw	1
  2432     05D2  02F5               	subwf	___awmod@counter,f
  2433     05D3  1D03               	btfss	3,2
  2434     05D4  2DD6               	goto	u501
  2435     05D5  2DD7               	goto	u500
  2436     05D6                     u501:
  2437     05D6  2DBA               	goto	l1282
  2438     05D7                     u500:
  2439     05D7                     l1290:
  2440     05D7  0876               	movf	___awmod@sign,w
  2441     05D8  1903               	btfsc	3,2
  2442     05D9  2DDB               	goto	u511
  2443     05DA  2DDC               	goto	u510
  2444     05DB                     u511:
  2445     05DB  2DE1               	goto	l1294
  2446     05DC                     u510:
  2447     05DC                     l1292:
  2448     05DC  09F2               	comf	___awmod@dividend,f
  2449     05DD  09F3               	comf	___awmod@dividend+1,f
  2450     05DE  0AF2               	incf	___awmod@dividend,f
  2451     05DF  1903               	skipnz
  2452     05E0  0AF3               	incf	___awmod@dividend+1,f
  2453     05E1                     l1294:
  2454     05E1  0873               	movf	___awmod@dividend+1,w
  2455     05E2  00F1               	movwf	?___awmod+1
  2456     05E3  0872               	movf	___awmod@dividend,w
  2457     05E4  00F0               	movwf	?___awmod
  2458     05E5                     l464:
  2459     05E5  0008               	return
  2460     05E6                     __end_of___awmod:
  2461                           
  2462                           	psect	text14
  2463     05E6                     __ptext14:	
  2464 ;; *************** function ___awdiv *****************
  2465 ;; Defined at:
  2466 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.40\pic\sources\c90\common\awdiv.c"
  2467 ;; Parameters:    Size  Location     Type
  2468 ;;  divisor         2    7[COMMON] int 
  2469 ;;  dividend        2    9[COMMON] int 
  2470 ;; Auto vars:     Size  Location     Type
  2471 ;;  quotient        2    2[BANK0 ] int 
  2472 ;;  sign            1    1[BANK0 ] unsigned char 
  2473 ;;  counter         1    0[BANK0 ] unsigned char 
  2474 ;; Return value:  Size  Location     Type
  2475 ;;                  2    7[COMMON] int 
  2476 ;; Registers used:
  2477 ;;		wreg, status,2, status,0
  2478 ;; Tracked objects:
  2479 ;;		On entry : 0/0
  2480 ;;		On exit  : 0/0
  2481 ;;		Unchanged: 0/0
  2482 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  2483 ;;      Params:         4       0       0       0       0
  2484 ;;      Locals:         0       4       0       0       0
  2485 ;;      Temps:          1       0       0       0       0
  2486 ;;      Totals:         5       4       0       0       0
  2487 ;;Total ram usage:        9 bytes
  2488 ;; Hardware stack levels used: 1
  2489 ;; This function calls:
  2490 ;;		Nothing
  2491 ;; This function is called by:
  2492 ;;		_main
  2493 ;; This function uses a non-reentrant model
  2494 ;;
  2495                           
  2496     05E6                     ___awdiv:	
  2497                           ;psect for function ___awdiv
  2498                           
  2499     05E6                     l1216:	
  2500                           ;incstack = 0
  2501                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
  2502                           
  2503     05E6  1283               	bcf	3,5	;RP0=0, select bank0
  2504     05E7  1303               	bcf	3,6	;RP1=0, select bank0
  2505     05E8  01A1               	clrf	___awdiv@sign
  2506     05E9                     l1218:
  2507     05E9  1FF8               	btfss	___awdiv@divisor+1,7
  2508     05EA  2DEC               	goto	u331
  2509     05EB  2DED               	goto	u330
  2510     05EC                     u331:
  2511     05EC  2DF4               	goto	l1224
  2512     05ED                     u330:
  2513     05ED                     l1220:
  2514     05ED  09F7               	comf	___awdiv@divisor,f
  2515     05EE  09F8               	comf	___awdiv@divisor+1,f
  2516     05EF  0AF7               	incf	___awdiv@divisor,f
  2517     05F0  1903               	skipnz
  2518     05F1  0AF8               	incf	___awdiv@divisor+1,f
  2519     05F2                     l1222:
  2520     05F2  01A1               	clrf	___awdiv@sign
  2521     05F3  0AA1               	incf	___awdiv@sign,f
  2522     05F4                     l1224:
  2523     05F4  1FFA               	btfss	___awdiv@dividend+1,7
  2524     05F5  2DF7               	goto	u341
  2525     05F6  2DF8               	goto	u340
  2526     05F7                     u341:
  2527     05F7  2E01               	goto	l1230
  2528     05F8                     u340:
  2529     05F8                     l1226:
  2530     05F8  09F9               	comf	___awdiv@dividend,f
  2531     05F9  09FA               	comf	___awdiv@dividend+1,f
  2532     05FA  0AF9               	incf	___awdiv@dividend,f
  2533     05FB  1903               	skipnz
  2534     05FC  0AFA               	incf	___awdiv@dividend+1,f
  2535     05FD                     l1228:
  2536     05FD  3001               	movlw	1
  2537     05FE  00FB               	movwf	??___awdiv
  2538     05FF  087B               	movf	??___awdiv,w
  2539     0600  06A1               	xorwf	___awdiv@sign,f
  2540     0601                     l1230:
  2541     0601  01A2               	clrf	___awdiv@quotient
  2542     0602  01A3               	clrf	___awdiv@quotient+1
  2543     0603                     l1232:
  2544     0603  0877               	movf	___awdiv@divisor,w
  2545     0604  0478               	iorwf	___awdiv@divisor+1,w
  2546     0605  1903               	btfsc	3,2
  2547     0606  2E08               	goto	u351
  2548     0607  2E09               	goto	u350
  2549     0608                     u351:
  2550     0608  2E40               	goto	l1252
  2551     0609                     u350:
  2552     0609                     l1234:
  2553     0609  01A0               	clrf	___awdiv@counter
  2554     060A  0AA0               	incf	___awdiv@counter,f
  2555     060B  2E17               	goto	l1240
  2556     060C                     l1236:
  2557     060C  3001               	movlw	1
  2558     060D                     u365:
  2559     060D  1003               	clrc
  2560     060E  0DF7               	rlf	___awdiv@divisor,f
  2561     060F  0DF8               	rlf	___awdiv@divisor+1,f
  2562     0610  3EFF               	addlw	-1
  2563     0611  1D03               	skipz
  2564     0612  2E0D               	goto	u365
  2565     0613                     l1238:
  2566     0613  3001               	movlw	1
  2567     0614  00FB               	movwf	??___awdiv
  2568     0615  087B               	movf	??___awdiv,w
  2569     0616  07A0               	addwf	___awdiv@counter,f
  2570     0617                     l1240:
  2571     0617  1FF8               	btfss	___awdiv@divisor+1,7
  2572     0618  2E1A               	goto	u371
  2573     0619  2E1B               	goto	u370
  2574     061A                     u371:
  2575     061A  2E0C               	goto	l1236
  2576     061B                     u370:
  2577     061B                     l1242:
  2578     061B  3001               	movlw	1
  2579     061C                     u385:
  2580     061C  1003               	clrc
  2581     061D  0DA2               	rlf	___awdiv@quotient,f
  2582     061E  0DA3               	rlf	___awdiv@quotient+1,f
  2583     061F  3EFF               	addlw	-1
  2584     0620  1D03               	skipz
  2585     0621  2E1C               	goto	u385
  2586     0622  0878               	movf	___awdiv@divisor+1,w
  2587     0623  027A               	subwf	___awdiv@dividend+1,w
  2588     0624  1D03               	skipz
  2589     0625  2E28               	goto	u395
  2590     0626  0877               	movf	___awdiv@divisor,w
  2591     0627  0279               	subwf	___awdiv@dividend,w
  2592     0628                     u395:
  2593     0628  1C03               	skipc
  2594     0629  2E2B               	goto	u391
  2595     062A  2E2C               	goto	u390
  2596     062B                     u391:
  2597     062B  2E33               	goto	l1248
  2598     062C                     u390:
  2599     062C                     l1244:
  2600     062C  0877               	movf	___awdiv@divisor,w
  2601     062D  02F9               	subwf	___awdiv@dividend,f
  2602     062E  0878               	movf	___awdiv@divisor+1,w
  2603     062F  1C03               	skipc
  2604     0630  03FA               	decf	___awdiv@dividend+1,f
  2605     0631  02FA               	subwf	___awdiv@dividend+1,f
  2606     0632                     l1246:
  2607     0632  1422               	bsf	___awdiv@quotient,0
  2608     0633                     l1248:
  2609     0633  3001               	movlw	1
  2610     0634                     u405:
  2611     0634  1003               	clrc
  2612     0635  0CF8               	rrf	___awdiv@divisor+1,f
  2613     0636  0CF7               	rrf	___awdiv@divisor,f
  2614     0637  3EFF               	addlw	-1
  2615     0638  1D03               	skipz
  2616     0639  2E34               	goto	u405
  2617     063A                     l1250:
  2618     063A  3001               	movlw	1
  2619     063B  02A0               	subwf	___awdiv@counter,f
  2620     063C  1D03               	btfss	3,2
  2621     063D  2E3F               	goto	u411
  2622     063E  2E40               	goto	u410
  2623     063F                     u411:
  2624     063F  2E1B               	goto	l1242
  2625     0640                     u410:
  2626     0640                     l1252:
  2627     0640  0821               	movf	___awdiv@sign,w
  2628     0641  1903               	btfsc	3,2
  2629     0642  2E44               	goto	u421
  2630     0643  2E45               	goto	u420
  2631     0644                     u421:
  2632     0644  2E4A               	goto	l1256
  2633     0645                     u420:
  2634     0645                     l1254:
  2635     0645  09A2               	comf	___awdiv@quotient,f
  2636     0646  09A3               	comf	___awdiv@quotient+1,f
  2637     0647  0AA2               	incf	___awdiv@quotient,f
  2638     0648  1903               	skipnz
  2639     0649  0AA3               	incf	___awdiv@quotient+1,f
  2640     064A                     l1256:
  2641     064A  0823               	movf	___awdiv@quotient+1,w
  2642     064B  00F8               	movwf	?___awdiv+1
  2643     064C  0822               	movf	___awdiv@quotient,w
  2644     064D  00F7               	movwf	?___awdiv
  2645     064E                     l451:
  2646     064E  0008               	return
  2647     064F                     __end_of___awdiv:
  2648     007E                     btemp	set	126	;btemp
  2649     007E                     wtemp0	set	126
  2650                           
  2651                           	psect	idloc
  2652                           
  2653                           ;Config register IDLOC0 @ 0x2000
  2654                           ;	unspecified, using default values
  2655     2000                     	org	8192
  2656     2000  3FFF               	dw	16383
  2657                           
  2658                           ;Config register IDLOC1 @ 0x2001
  2659                           ;	unspecified, using default values
  2660     2001                     	org	8193
  2661     2001  3FFF               	dw	16383
  2662                           
  2663                           ;Config register IDLOC2 @ 0x2002
  2664                           ;	unspecified, using default values
  2665     2002                     	org	8194
  2666     2002  3FFF               	dw	16383
  2667                           
  2668                           ;Config register IDLOC3 @ 0x2003
  2669                           ;	unspecified, using default values
  2670     2003                     	org	8195
  2671     2003  3FFF               	dw	16383
  2672                           
  2673                           	psect	config
  2674                           
  2675                           ;Config register CONFIG1 @ 0x2007
  2676                           ;	Oscillator Selection bits
  2677                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2678                           ;	Watchdog Timer Enable bit
  2679                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2680                           ;	Power-up Timer Enable bit
  2681                           ;	PWRTE = OFF, PWRT disabled
  2682                           ;	RE3/MCLR pin function select bit
  2683                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2684                           ;	Code Protection bit
  2685                           ;	CP = OFF, Program memory code protection is disabled
  2686                           ;	Data Code Protection bit
  2687                           ;	CPD = OFF, Data memory code protection is disabled
  2688                           ;	Brown Out Reset Selection bits
  2689                           ;	BOREN = OFF, BOR disabled
  2690                           ;	Internal External Switchover bit
  2691                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2692                           ;	Fail-Safe Clock Monitor Enabled bit
  2693                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2694                           ;	Low Voltage Programming Enable bit
  2695                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2696                           ;	In-Circuit Debugger Mode bit
  2697                           ;	DEBUG = 0x1, unprogramme  2698     2007                     	org	8199
  2699     2007  20D4               	dw	8404
  2700                           
  2701                           ;Config register CONFIG2 @ 0x2008
  2702                           ;	Brown-out Reset Selection bit
  2703                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2704                           ;	Flash Program Memory Self Write Enable bits
  2705                           ;	WRT = OFF, Write protection off
  2706     2008                     	org	8200
  2707     2008  3FFF               	dw	16383

Data Sizes:
    Strings     17
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     12      14
    BANK0            80      7       8
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    Lcd_8bits_Write_String@a	PTR unsigned char  size(1) Largest target is 17
		 -> STR_1(CODE[17]), 


Critical Paths under _main in COMMON

    _main->___awdiv
    _setup->_Lcd_8bits_Set_Cursor
    _Lcd_8bits_Write_String->_Lcd_8bits_Write_Char
    _Lcd_8bits_Write_Char->_Lcd_8bits_Port
    _Lcd_8bits_Set_Cursor->_Lcd_8bits_Cmd
    _Lcd_8bits_Init->_Lcd_8bits_Cmd
    _Lcd_8bits_Clear->_Lcd_8bits_Cmd
    _Lcd_8bits_Cmd->_Lcd_8bits_Port
    ___awdiv->___awmod

Critical Paths under _main in BANK0

    _main->___awdiv

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0    4087
                                              4 BANK0      3     3      0
               _Lcd_8bits_Set_Cursor
               _Lcd_8bits_Write_Char
                            ___awdiv
                            ___awmod
                              _setup
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (1) _spiWrite                                             1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (2) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0    1119
                    _Lcd_8bits_Clear
                     _Lcd_8bits_Init
               _Lcd_8bits_Set_Cursor
             _Lcd_8bits_Write_String
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     360
                                              0 COMMON     4     1      3
 ---------------------------------------------------------------------------------
 (2) _Lcd_8bits_Write_String                               3     3      0     167
                                              3 COMMON     3     3      0
               _Lcd_8bits_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_8bits_Write_Char                                 2     2      0      44
                                              1 COMMON     2     2      0
                     _Lcd_8bits_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_8bits_Set_Cursor                                 3     2      1     482
                                              4 COMMON     3     2      1
                      _Lcd_8bits_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_8bits_Init                                       2     2      0      66
                                              4 COMMON     2     2      0
                      _Lcd_8bits_Cmd
                     _Lcd_8bits_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_8bits_Clear                                      0     0      0      44
                      _Lcd_8bits_Cmd
 ---------------------------------------------------------------------------------
 (3) _Lcd_8bits_Cmd                                        3     3      0      44
                                              1 COMMON     3     3      0
                     _Lcd_8bits_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_8bits_Port                                       1     1      0      22
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) ___awmod                                              7     3      4    1208
                                              0 COMMON     7     3      4
 ---------------------------------------------------------------------------------
 (1) ___awdiv                                              9     5      4    1212
                                              7 COMMON     5     1      4
                                              0 BANK0      4     4      0
                            ___awmod (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_8bits_Set_Cursor
     _Lcd_8bits_Cmd
       _Lcd_8bits_Port
   _Lcd_8bits_Write_Char
     _Lcd_8bits_Port
   ___awdiv
     ___awmod (ARG)
   ___awmod
   _setup
     _Lcd_8bits_Clear
       _Lcd_8bits_Cmd
     _Lcd_8bits_Init
       _Lcd_8bits_Cmd
       _Lcd_8bits_Port
     _Lcd_8bits_Set_Cursor
     _Lcd_8bits_Write_String
       _Lcd_8bits_Write_Char
     _spiInit
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      C       E       1      100.0%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0      16       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      7       8       5       10.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0      16      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Wed Aug 02 13:22:54 2023

                             pc 0002                     _SSPSTATbits 0094                              l67 053E  
                  ___awdiv@sign 0021                              fsr 0004                             l201 0450  
                           l151 0457                             l160 058C                             l145 044A  
                           l209 0467                             l163 047D                             l148 04AD  
                           l157 04CD                             l191 048E                             l192 0493  
                           l169 04F2                             l451 064E                             l195 0458  
                           l198 045E                             l464 05E5                             _RE0 0048  
                           _RE1 0049                             u300 0486                             u301 0485  
                           u310 04F2                             u311 04F1                             u320 045E  
                           u321 045D                             u410 0640                             u330 05ED  
                           u411 063F                             u331 05EC                             u420 0645  
                           u340 05F8                             u500 05D7                             u421 0644  
                           u405 0634                             u341 05F7                             u501 05D6  
                           u350 0609                             u510 05DC                             u430 0592  
                           u351 0608                             u511 05DB                             u431 0591  
                           u440 059D                             u280 04B4                             u441 059C  
                           u281 04B3                             u370 061B                             u450 05A8  
                           u290 04C4                             u371 061A                             u451 05A7  
                           u291 04C3                             u365 060D                             u390 062C  
                           u470 05BA                             u391 062B                             u471 05B9  
                           u607 0549                             u527 065C                             u480 05C4  
                           u385 061C                             u481 05C3                             u465 05AC  
                           u617 0558                             u537 066C                             u395 0628  
                           u627 0567                             u547 0682                             u485 05C0  
                           u637 057B                             u557 0690                             u495 05CB  
                           u647 04A5                             u567 06A8                             u577 06B6  
                           u587 06CC                             u597 0477                             fsr0 0004  
                  ___awmod@sign 0076            _Lcd_8bits_Set_Cursor 04AE         Lcd_8bits_Set_Cursor@row 0075  
                          l1120 0472                            l1200 0526                            l1114 0446  
                          l1130 049E                            l1122 0475                            l1202 052B  
                          l1210 045F                            l1220 05ED                            l1132 04A1  
                          l1140 04B7                            l1124 047A                            l1116 0469  
                          l1204 0530                            l1212 0464                            l1300 0654  
                          l1230 0601                            l1222 05F2                            l1134 04AA  
                          l1126 0495                            l1142 04BE                            l1118 046C  
                          l1150 0486                            l1206 0538                            l1310 067C  
                          l1302 0663                            l1240 0617                            l1232 0603  
                          l1224 05F4                            l1216 05E6                            l1128 0498  
                          l1160 0545                            l1144 04C4                            l1136 04AF  
                          l1152 0488                            l1208 044C                            l1320 069A  
                          l1312 0686                            l1304 0666                            l1250 063A  
                          l1242 061B                            l1234 0609                            l1226 05F8  
                          l1218 05E9                            l1170 0580                            l1162 054E  
                          l1146 04C7                            l1138 04B4                            l1154 048A  
                          l1330 06BA                            l1322 06A2                            l1314 0689  
                          l1306 0670                            l1244 062C                            l1236 060C  
                          l1252 0640                            l1228 05FD                            l1260 058D  
                          l1172 0586                            l1164 055D                            l1180 04DF  
                          l1156 048D                            l1148 047F                            l1340 06DB  
                          l1332 06C0                            l1324 06AC                            l1316 068A  
                          l1308 0676                            l1254 0645                            l1246 0632  
                          l1238 0613                            l1270 059D                            l1262 058E  
                          l1174 0451                            l1166 0563                            l1158 053F  
                          l1182 04E5                            l1190 0516                            l1350 0754  
                          l1342 06F4                            l1334 06C6                            l1326 06AF  
                          l1318 0694                            l1256 064A                            l1248 0633  
                          l1280 05B6                            l1272 05A2                            l1264 0592  
                          l1168 0577                            l1176 04CF                            l1192 0517  
                          l1184 0458                            l1360 07DA                            l1352 077A  
                          l1344 071A                            l1336 06D0                            l1328 06B0  
                          l1282 05BA                            l1274 05A8                            l1290 05D7  
                          l1266 0597                            l1178 04D2                            l1194 0518  
                          l1186 04F3                            l1354 0793                            l1346 0733  
                          l1338 06D3                            l1292 05DC                            l1284 05C4  
                          l1276 05AB                            l1268 0599                            l1196 0521  
                          l1188 0506                            l1356 079B                            l1348 073B  
                          l1294 05E1                            l1286 05CA                            l1278 05B2  
                          l1198 0525                            l1358 07B4                            l1288 05D1  
                          l1298 064F                            STR_1 0009                            _IOCB 0096  
                          _WPUB 0095                            _main 064F                            btemp 007E  
                          start 0000           __end_of_Lcd_8bits_Cmd 04AE                  _Lcd_8bits_Init 053F  
                _Lcd_8bits_Port 0445        Lcd_8bits_Set_Cursor@temp 0076                           ?_main 0070  
               __end_of___awdiv 064F                 __end_of___awmod 05E6                           _ANSEL 0188  
               ___awdiv@divisor 0077                 ___awdiv@counter 0020                           _PORTA 0005  
                         _PORTB 0006                           _PORTC 0007                           _PORTD 0008  
                         _PORTE 0009                           _TRISA 0085                           _TRISB 0086  
                         _TRISC 0087                           _TRISD 0088                           _TRISE 0089  
         ?_Lcd_8bits_Set_Cursor 0074                           _setup 04F3                           pclath 000A  
               __end_of_spiInit 0494                 __end_of_spiRead 0468                           status 0003  
                         wtemp0 007E          __end_of_Lcd_8bits_Init 058D          __end_of_Lcd_8bits_Port 044B  
               _Lcd_8bits_Clear 0451            _Lcd_8bits_Write_Char 0468                 __initialization 07F7  
                  __end_of_main 07F7                          ??_main 0024                          _ADRESH 001E  
              ___awdiv@dividend 0079                          ?_setup 0070                          _ANSELH 0189  
         ?_Lcd_8bits_Write_Char 0070                          _TRISC3 043B                          _TRISC4 043C  
                        _TRISC5 043D                          _SSPCON 0014                          _SSPBUF 0013  
               ?_Lcd_8bits_Init 0070                 ?_Lcd_8bits_Port 0070                       ??___awdiv 007B  
                     ??___awmod 0074                ___awdiv@quotient 0022                 ___awmod@divisor 0070  
               ___awmod@counter 0075          ??_Lcd_8bits_Set_Cursor 0075                __end_of_spiWrite 0451  
                     ??_spiInit 0073                       ??_spiRead 0070         __end_of_Lcd_8bits_Clear 0458  
       __end_of__initialization 07FC                  __pcstackCOMMON 0070        ??_Lcd_8bits_Write_String 0073  
                 __end_of_setup 053F                  _OPTION_REGbits 0081                         ??_setup 0077  
                    __pbssBANK0 0027          ??_Lcd_8bits_Write_Char 0071                      __pmaintext 064F  
               Lcd_8bits_Port@a 0070                ?_Lcd_8bits_Clear 0070                         _SSPSTAT 0094  
                    __stringtab 0003                       ?_spiWrite 0070                         ___awdiv 05E6  
                       ___awmod 058D                         __ptext1 044B                         __ptext2 045F  
                       __ptext3 0458                         __ptext4 04F3                         __ptext5 047E  
                       __ptext6 04CE                         __ptext7 0468                         __ptext8 04AE  
                       __ptext9 053F                ___awmod@dividend 0072                         _valPot1 007D  
                       _valPot2 007C                         _spiInit 047E                         _spiRead 045F  
              ??_Lcd_8bits_Init 0074                ??_Lcd_8bits_Port 0070            end_of_initialization 07FC  
    Lcd_8bits_Set_Cursor@column 0074                      ??_spiWrite 0070                       _PORTCbits 0007  
        _Lcd_8bits_Write_String 04CE                     spiWrite@dat 0070                   _Lcd_8bits_Cmd 0494  
                _spiReceiveWait 0458             start_initialization 07F7         Lcd_8bits_Write_String@a 0075  
       Lcd_8bits_Write_String@i 0073                  ?_Lcd_8bits_Cmd 0070          __end_of_spiReceiveWait 045F  
         Lcd_8bits_Write_Char@a 0072                     __pbssCOMMON 007C                       ___latbits 0002  
                 __pcstackBANK0 0020                  Lcd_8bits_Cmd@a 0073                 ?_spiReceiveWait 0070  
                      ?___awdiv 0077                        ?___awmod 0070                       __pstrings 0003  
                      ?_spiInit 0070                        ?_spiRead 0070            spiInit@sTransmitEdge 0072  
               ??_Lcd_8bits_Cmd 0071                        _PIE1bits 008C              spiInit@sDataSample 0070  
                      _PIR1bits 000C                      _ADCON0bits 001F                     __stringbase 0008  
                    _ADCON1bits 009F         ?_Lcd_8bits_Write_String 0070              __end_of__stringtab 0009  
__end_of_Lcd_8bits_Write_String 04F3                        __ptext10 0451                        __ptext11 0494  
                      __ptext12 0445                        __ptext13 058D                        __ptext14 05E6  
  __end_of_Lcd_8bits_Set_Cursor 04CE                        _valCount 0027                        _spiWrite 044B  
                  spiInit@sType 0073               ??_Lcd_8bits_Clear 0074               spiInit@sClockIdle 0071  
                    _INTCONbits 000B                ??_spiReceiveWait 0070                       stringcode 0003  
                    _OSCCONbits 008F    __end_of_Lcd_8bits_Write_Char 047E                        stringdir 0003  
                      stringtab 0003  
